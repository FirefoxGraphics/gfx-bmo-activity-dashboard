{"activity": {"Sotaro": {"bmo": {"1863257": {"status": {"keywords": [], "summary": "Remove sync wait in compositor thread of RemoteTextureMap::WaitForRemoteTextureOwner()", "groups": [], "id": 1863257, "priority": "P1", "type": "enhancement", "severity": "--", "status": "NEW"}, "comments": {"Sotaro": [{"author": "sotaro.ikeda.g@gmail.com", "text": "Created attachment 9400404\nWIP: Bug 1863257 - Remove sync wait in compositor thread of RemoteTextureMap::WaitForRemoteTextureOwner()", "time": "2024-05-07T08:00:15Z", "is_private": false, "count": 2, "age": 442814, "platform": "bmo"}, {"count": 3, "text": "Setting this to a `P1` since it blocks an `S2` report.", "time": "2024-05-08T20:29:29Z", "author": "bhood@mozilla.com", "is_private": false, "age": 574168, "platform": "bmo"}]}}, "1708022": {"status": {"summary": "Use DMA buffers for WebGPU presentation on Linux", "status": "NEW", "id": 1708022, "type": "enhancement", "priority": "P5", "groups": [], "severity": "S3", "keywords": []}, "comments": {"Sotaro": [{"time": "2024-05-08T01:21:41Z", "count": 6, "is_private": false, "text": "Created attachment 9400625\nidea of present WebGPU without readback on linux with DMABuf", "author": "sotaro.ikeda.g@gmail.com", "age": 505300, "platform": "bmo"}]}}, "1708023": {"status": {"groups": [], "summary": "Use IO Surfaces for WebGPU presentation on macOS", "id": 1708023, "priority": "P5", "type": "enhancement", "status": "NEW", "keywords": [], "severity": "S3"}, "comments": {"Sotaro": [{"text": "Created attachment 9400628\nidea of present WebGPU without readback on macos", "count": 6, "author": "sotaro.ikeda.g@gmail.com", "is_private": false, "time": "2024-05-08T01:22:24Z", "age": 505343, "platform": "bmo"}]}}, "1895168": {"status": {"type": "defect", "priority": "P2", "severity": "S2", "id": 1895168, "summary": "Slow canvases block the compositor thread", "groups": [], "keywords": [], "status": "NEW"}, "comments": {"Nical": [{"is_private": false, "author": "nical.bugzilla@gmail.com", "count": 1, "text": "Sotaro, any ideas?", "time": "2024-05-06T15:27:42Z", "age": 383261, "platform": "bmo"}, {"is_private": false, "author": "sotaro.ikeda.g@gmail.com", "count": 2, "text": "There is a bug for removing the wait of RemoteTextureMap::WaitForRemoteTextureOwner() as  Bug 1863257.\n\nWebRenderAPI already has a capability of waiting remote texture, it could be extended as to wait also RemoteTextureOwner.", "time": "2024-05-07T09:05:37Z", "age": 446736, "platform": "bmo"}], "Sotaro": [{"is_private": false, "author": "sotaro.ikeda.g@gmail.com", "count": 2, "text": "There is a bug for removing the wait of RemoteTextureMap::WaitForRemoteTextureOwner() as  Bug 1863257.\n\nWebRenderAPI already has a capability of waiting remote texture, it could be extended as to wait also RemoteTextureOwner.", "time": "2024-05-07T09:05:37Z", "age": 446736, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 4, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Lee": {"bmo": {"1890216": {"status": {"keywords": [], "id": 1890216, "groups": [], "summary": "Update Skia to m125", "priority": "P1", "severity": "N/A", "status": "ASSIGNED", "type": "enhancement"}, "comments": {"Lee": [{"time": "2024-05-08T16:25:18Z", "is_private": false, "author": "lsalzman@mozilla.com", "count": 4, "text": "Created attachment 9400732\nBug 1890216 - Fuzz for Skia m125 update. r?aosmond\n\n\n\nDepends on D209823", "age": 559517, "platform": "bmo"}]}}, "1881738": {"status": {"type": "defect", "id": 1881738, "status": "VERIFIED", "groups": [], "summary": "\"Terminate GPU process\" on many canvas2d type demos completely freezes the browser for a long time (30s-1m) and then fallback to sw-wr", "severity": "S3", "keywords": ["regression"], "priority": "--"}, "comments": {"Lee": [{"is_private": false, "text": "If you tear down the GPU process, that it might take a few moments for the canvases to recognize that the GPU is gone and they need to restart.", "author": "lsalzman@mozilla.com", "count": 15, "time": "2024-05-09T07:17:22Z", "age": 613041, "platform": "bmo"}, {"text": "(In reply to Lee Salzman [:lsalzman] from comment #15)\n> If you tear down the GPU process, that it might take a few moments for the canvases to recognize that the GPU is gone and they need to restart.\n\nThank you! Closing this as verified per comments 14 and 15.", "is_private": false, "count": 16, "time": "2024-05-09T07:28:16Z", "author": "atrif@mozilla.com", "age": 613695, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 2, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Glenn": {"bmo": {"1894796": {"status": {"priority": "--", "type": "defect", "severity": "S2", "status": "NEW", "keywords": [], "summary": "Google Maps turning black", "groups": [], "id": 1894796}, "comments": {"Glenn": [{"author": "gwatson@mozilla.com", "count": 6, "time": "2024-05-02T21:51:01Z", "is_private": false, "text": "S2 until we have an estimate how many people are affected by this.", "age": 60660, "platform": "bmo"}, {"is_private": false, "text": "Created attachment 9399897\nabout-support-nightly.txt\n\nI installed Nightly, created a new profile and cannot reproduce the issue there. (about:support attached)", "time": "2024-05-02T21:52:55Z", "count": 7, "author": "awagner@mozilla.com", "age": 60774, "platform": "bmo"}, {"author": "awagner@mozilla.com", "time": "2024-05-02T22:12:39Z", "count": 8, "is_private": false, "text": "I just noticed there is a new graphics driver update available, updating from 24.3.1 to 24.4.1. Let me know if you'd like me to install the update and retry or hold off on that for now.", "age": 61958, "platform": "bmo"}, {"author": "jmuizelaar@mozilla.com", "count": 9, "time": "2024-05-07T15:19:00Z", "is_private": false, "text": "(In reply to Andreas Wagner [:TheOne] [use NI] from comment #8)\n> I just noticed there is a new graphics driver update available, updating from 24.3.1 to 24.4.1. Let me know if you'd like me to install the update and retry or hold off on that for now.\n\nHold off updating for now. Can you try installing release Firefox at different path to see if you can reproduce with that?", "age": 469139, "platform": "bmo"}]}}, "1887810": {"status": {"status": "REOPENED", "type": "task", "priority": "--", "severity": "--", "id": 1887810, "summary": "Use quad-mask path for clip-out mode", "groups": [], "keywords": []}, "comments": {"Glenn": [{"count": 7, "time": "2024-05-06T19:34:27Z", "author": "gwatson@mozilla.com", "is_private": false, "text": "Still WIP to re-land once we solve some regressions from it.", "age": 398066, "platform": "bmo"}]}}, "1893088": {"status": {"keywords": [], "id": 1893088, "groups": [], "summary": "Split coord space mapping for stacking context coord / external scroll offsets", "severity": "--", "priority": "--", "type": "task", "status": "REOPENED"}, "comments": {"Glenn": [{"author": "gwatson@mozilla.com", "time": "2024-05-06T19:35:28Z", "count": 8, "text": "I will return to looking at this in a week or two, and the regression, before landing, but working on some higher priority things at the moment.", "is_private": false, "age": 398127, "platform": "bmo"}, {"text": "Almost certain that patches from this bug caused perf regressions on tscrollx : https://treeherder.mozilla.org/perfherder/alerts?id=59 , and that the subsequent backout of the patches fixed the regression : https://treeherder.mozilla.org/perfherder/alerts?id=124&hideDwnToInv=0", "is_private": false, "time": "2024-05-08T02:11:21Z", "count": 9, "author": "mayankleoboy1@gmail.com", "age": 508280, "platform": "bmo"}]}}, "1894399": {"status": {"status": "RESOLVED", "priority": "--", "type": "task", "keywords": [], "summary": "Temporarily disable quad-style gradients from rendering in tiled / nine-patch mode.", "id": 1894399, "groups": [], "severity": "--"}, "comments": {"Glenn": [{"is_private": false, "author": "gwatson@mozilla.com", "count": 4, "text": "Updated fuzziness slightly for android hw.", "time": "2024-05-07T00:33:24Z", "age": 416003, "platform": "bmo"}, {"time": "2024-05-07T01:50:19Z", "text": "Pushed by gwatson@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/a5201aa2fb4e\nTemporarily disable quad-style gradients from rendering in tiled / nine-patch mode. r=gfx-reviewers,nical", "count": 5, "author": "pulsebot@bmo.tld", "is_private": false, "age": 420618, "platform": "bmo"}, {"count": 6, "text": "https://hg.mozilla.org/mozilla-central/rev/a5201aa2fb4e", "is_private": false, "author": "ctuns@mozilla.com", "time": "2024-05-07T09:17:26Z", "age": 447445, "platform": "bmo"}]}}, "1893205": {"status": {"severity": "S2", "summary": "Certain 3D CSS usage crashes WebRenderer process on Windows, leaving Firefox running poorly until the whole process is restarted", "groups": [], "id": 1893205, "keywords": [], "type": "defect", "priority": "--", "status": "NEW"}, "comments": {"Glenn": [{"author": "gwatson@mozilla.com", "time": "2024-05-03T03:15:30Z", "count": 14, "is_private": false, "text": "Great find, thanks for digging in to it. Yes, I agree that the proposed fix seems reasonable.\n\nI did a try run with your patch and it doesn't seem to break anything [1] other than a few unrelated intermittent failures.\n\nLong term, it'd probably be better to handle this slightly earlier than `take_context`, perhaps in `post_update` of `Tile`. However, I think it's fine to merge this as-is, since that change will require a bit more work.\n\nDo you want to create a patch and I'll review it, or would you rather I create a patch? (not entirely sure how we'll automate a test for this yet, will need to think about it a bit more).\n\n[1] https://treeherder.mozilla.org/jobs?repo=try&revision=fc5b7d309aa9385f749da00c60f794755b9a2d65&selectedTaskRun=d2JAIvNkSrKTBUZd4e4F8w.1", "age": 80129, "platform": "bmo"}, {"is_private": false, "text": "Thanks, I'll push the short-term change for review then.", "author": "yjuglaret@mozilla.com", "time": "2024-05-03T09:29:33Z", "count": 15, "age": 102572, "platform": "bmo"}, {"text": "Created attachment 9399943\nBug 1893205 - Properly reset the dirty rect in PicturePrimitive::take_context. r=gw\n\n\nWhen we reset the dirty rect to PictureRect::zero() on a Tile, we must\nalso mark the Tile as valid. This prevents the propagation of zero-area\nrectangles which can otherwise ultimately cause BeginDraw failures.", "is_private": false, "author": "yjuglaret@mozilla.com", "time": "2024-05-03T09:35:24Z", "count": 16, "age": 102923, "platform": "bmo"}, {"text": "Thanks for helping out here, Yannis.  :)", "is_private": false, "time": "2024-05-08T20:46:52Z", "count": 17, "author": "bhood@mozilla.com", "age": 575211, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 5, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Erich": {"bmo": {"1893047": {"status": {"severity": "--", "keywords": [], "status": "NEW", "priority": "P1", "id": 1893047, "type": "defect", "summary": "`webgpu6` WPT test chunk on MacOS is mysteriously never running", "groups": []}, "comments": {"Erich": [{"text": "This bug refers to Try runs like this one: [`try:ee88f1757a59`](https://treeherder.mozilla.org/jobs?repo=try&tier=1%2C2%2C3&revision=ee88f1757a59c85dd5e7428102c95e2e45fd1a54)\n\nInterestingly, recent changes that have moved tests around (i.e., [bug 1893054](https://bugzilla.mozilla.org/show_bug.cgi?id=1893054)) seem to move the \"missing\" chunk. It's possible that this is because of a subset of tests exercising the runner or the test harness such that it misbehaves? \ud83e\udd14 The `exception` status (which can be observed with these jobs) AIUI happens when the harness itself encounters an uncaught Python exception.", "is_private": false, "count": 1, "time": "2024-05-08T00:34:32Z", "author": "egubler@mozilla.com", "age": 502471, "platform": "bmo"}]}}, "1893054": {"status": {"keywords": [], "severity": "--", "id": 1893054, "priority": "P1", "type": "task", "status": "ASSIGNED", "groups": [], "summary": "WebGPU CTS: promote existing perma-passing tests to tier 2"}, "comments": {"Erich": [{"text": "Created attachment 9400598\nBug 1893054 - test(webgpu): use trailing `.*` in `webgpu` timeout platform regex. r=#webgpu-reviewers!\n\n\nDo this mostly to be consistent with surrounding configuration.", "is_private": false, "author": "egubler@mozilla.com", "time": "2024-05-07T21:19:07Z", "count": 6, "age": 490746, "platform": "bmo"}]}}, "1895268": {"status": {"summary": "Update WGPU to upstream (week of 2024-05-06)", "status": "RESOLVED", "priority": "P1", "type": "task", "id": 1895268, "groups": [], "severity": "--", "keywords": []}, "comments": {"Erich": [{"time": "2024-05-06T15:35:14Z", "count": 1, "author": "egubler@mozilla.com", "text": "Created attachment 9400270\nBug 1895268 - build: bump WGPU to d5d683d3c491ec8cd2f5cdb43ac61e526cb7c231 (latest as of 2024-05-06) r=#webgpu-reviewers!", "is_private": false, "age": 383713, "platform": "bmo"}, {"is_private": false, "text": "Pushed by egubler@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/b976e2a07e31\nbuild: bump WGPU to d5d683d3c491ec8cd2f5cdb43ac61e526cb7c231 (latest as of 2024-05-06) r=webgpu-reviewers,supply-chain-reviewers,nical", "time": "2024-05-07T14:17:43Z", "count": 2, "author": "pulsebot@bmo.tld", "age": 465462, "platform": "bmo"}, {"is_private": false, "text": "https://hg.mozilla.org/mozilla-central/rev/b976e2a07e31", "author": "tszentpeteri@mozilla.com", "count": 3, "time": "2024-05-07T21:49:04Z", "age": 492543, "platform": "bmo"}]}}}, "github": [{"repo": "gfx-rs/wgpu", "issues": {"issue:5679": {"status": {"type": "issue", "id": 5679, "summary": "meta: add `GOVERNANCE.md`", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5679"}, "comments": {"Erich": [{"text": "Currently in draft to reflect that I would like feedback from decision-making groups identified in this current revision. To wit: @gfx-rs/wgpu, @gfx-rs/naga\r\n\r\nI've given my best first approximation of how governance currently works in the WGPU project, but I expect that there's quite a bit I'm missing, or that's not quite correct.", "time": "2024-05-09T03:41:42Z", "age": 578501, "count": 1, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5679#issuecomment-2101528457", "platform": "gfx-rs/wgpu"}]}}, "issue:5662": {"status": {"type": "issue", "id": 5662, "summary": "Deadlock in 0.20.0 and trunk", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/5662"}, "comments": {"Erich": [{"text": "CC @jimblandy, who's been working on issues like this recently.", "time": "2024-05-05T01:53:27Z", "age": 226406, "count": 1, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/issues/5662#issuecomment-2094362131", "platform": "gfx-rs/wgpu"}, {"text": "Could you pull out from those stacks the locks each thread is holding, if any?", "time": "2024-05-05T02:35:41Z", "age": 228940, "count": 2, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/5662#issuecomment-2094372520", "platform": "gfx-rs/wgpu"}, {"text": "Actually, it might suffice simply to know which lock each thread is trying to acquire, and I could figure out which other ones it must be holding.", "time": "2024-05-05T02:37:29Z", "age": 229048, "count": 3, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/5662#issuecomment-2094372940", "platform": "gfx-rs/wgpu"}, {"text": "The deadlock appears to be caused by:\r\n\r\n- `command_encoder_end_compute_pass` acquires the buffer read lock before the bind group read lock here: https://github.com/gfx-rs/wgpu/blob/edf1a86148d1a62da857633fb224aa569f21ce4e/wgpu-core/src/command/compute_command.rs#L82-L83\r\n- `command_encoder_end_render_pass` acquires the bind group read lock before the buffer read lock here: https://github.com/gfx-rs/wgpu/blob/ad6774f7bb9c327238322d9e5beeb1c9a0c6e89d/wgpu-core/src/command/render.rs#L1385-L1389\r\n\r\nIn the backtraces above, there is one thread in the first location holding the buffers lock and trying to acquire the bind_groups lock, and one thread in the second location holding most locks (including the bind_group one) and trying to acquire the buffers lock.\r\n\r\nWhile these are all RWLocks, and these are all read lock acquisitions, there are also several threads trying to acquire write locks for both the bind_group and buffer storages. Due to the fair RWLock implementation in parking_lot, this makes the attempts to acquire read locks block until the write lock can be acquired, which then completes the deadlock.\r\n\r\nIt sounds like `rank::REGISTRY_STORAGE` should be split into one rank per resource to catch mistakes like this, maybe?", "time": "2024-05-07T18:04:49Z", "age": 457488, "count": 4, "author": "SludgePhD", "url": "https://github.com/gfx-rs/wgpu/issues/5662#issuecomment-2098249222", "platform": "gfx-rs/wgpu"}]}}, "issue:5652": {"status": {"type": "issue", "id": 5652, "summary": "[naga] [glsl-in] Crashes when we go over a certain nested stack depth (including if/else chains)", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/5652"}, "comments": {"Erich": [{"text": "Some relevant Naga community chat about solutions: https://matrix.to/#/!fjjkgHFcwtkREywzfk:matrix.org/$hfLitnms2hGFLbFiwC6t2ZJ6Yd-51HHj9WEmKol7RoI?via=matrix.org&via=mozilla.org&via=ralith.com", "time": "2024-05-03T07:33:49Z", "age": 74028, "count": 1, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/issues/5652#issuecomment-2092004010", "platform": "gfx-rs/wgpu"}]}}, "issue:5651": {"status": {"type": "issue", "id": 5651, "summary": "Satisfy Rust 1.78's latest easy lints", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5651"}, "comments": {"Erich": [{"text": "Just waiting on @gfx-rs/naga here. Maybe @teoxoy could rubber-stamp? \ud83d\ude00", "time": "2024-05-04T10:27:31Z", "age": 170850, "count": 8, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5651#issuecomment-2094003377", "platform": "gfx-rs/wgpu"}]}}, "issue:5622": {"status": {"type": "issue", "id": 5622, "summary": "Add Release.md", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5622"}, "comments": {"Erich": [{"text": "I'll take on review for this.\r\n\r\nWarning: I'll have a lot of (non-blocking) feedback (\ud83d\ude05), but I think this is a _big_ net improvement over nothing.", "time": "2024-05-04T00:36:16Z", "age": 135375, "count": 2, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5622#issuecomment-2093556252", "platform": "gfx-rs/wgpu"}]}}, "issue:5586": {"status": {"type": "issue", "id": 5586, "summary": "[core] Add `lock::observing` module, for analyzing lock acquisition.", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5586"}, "comments": {"Erich": [{"text": "Just rebased this change, and autosquashed.", "time": "2024-05-07T22:26:09Z", "age": 473168, "count": 9, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5586#issuecomment-2098851041", "platform": "gfx-rs/wgpu"}]}}, "issue:5504": {"status": {"type": "issue", "id": 5504, "summary": "[wgpu-hal] Upgrade to `ash 0.38`", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5504"}, "comments": {"Erich": [{"text": "I think our community chat would be a good place to continue this discussion about perceptions with PR statuses, so I started a thread in Matrix: https://matrix.to/#/!FZyQrssSlHEZqrYcOb:matrix.org/$_lc2jnjTVMqi3SD2nsjSYmFdSSAlt7cO0wBahOcfT-0?via=mozilla.org&via=matrix.org&via=envs.net", "time": "2024-05-03T06:43:27Z", "age": 71006, "count": 6, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5504#issuecomment-2091961963", "platform": "gfx-rs/wgpu"}, {"text": "I think once merge conflicts are resolved, it is ready to go", "time": "2024-05-09T02:35:01Z", "age": 574500, "count": 7, "author": "cwfitzgerald", "url": "https://github.com/gfx-rs/wgpu/pull/5504#issuecomment-2101380502", "platform": "gfx-rs/wgpu"}]}}, "issue:4514": {"status": {"type": "issue", "id": 4514, "summary": "Don't switch on a single constant in output consumed by FXC", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4514"}, "comments": {"Erich": [{"text": "@Imberflur: Yes please!", "time": "2024-05-03T17:41:30Z", "age": 110489, "count": 2, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/issues/4514#issuecomment-2092833865", "platform": "gfx-rs/wgpu"}, {"text": "https://github.com/gfx-rs/wgpu/issues/5656", "time": "2024-05-03T22:08:32Z", "age": 126511, "count": 3, "author": "Imberflur", "url": "https://github.com/gfx-rs/wgpu/issues/4514#issuecomment-2093311807", "platform": "gfx-rs/wgpu"}]}}}, "prs": {"pr:5680": {"status": {"type": "pr", "id": 5680, "summary": "meta: add `CONTRIBUTING.md`", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5680"}, "comments": {"Erich": [{"text": "todo", "time": "2024-05-09T03:51:52Z", "age": 579111, "count": 5, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5680#discussion_r1594731018", "platform": "gfx-rs/wgpu"}]}}, "pr:5679": {"status": {"type": "pr", "id": 5679, "summary": "meta: add `GOVERNANCE.md`", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5679"}, "comments": {"Erich": [{"text": "I think that having it at the front is the only way it'll ever be seen, but \ud83e\udd37\ud83c\udffb\u200d\u2642\ufe0f I don't have particularly strong feelings about the position.", "time": "2024-05-09T03:55:37Z", "age": 579336, "count": 5, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5679#discussion_r1594738253", "platform": "gfx-rs/wgpu"}, {"text": "This strikes me as the kind of thing that exists so we can point to when someone tries to be an ass and use this document against us.", "time": "2024-05-09T04:09:41Z", "age": 580180, "count": 6, "author": "cwfitzgerald", "url": "https://github.com/gfx-rs/wgpu/pull/5679#discussion_r1594756272", "platform": "gfx-rs/wgpu"}, {"text": "We have an explicitly special relationship with deno (we host deno_webgpu!) which has existed for a few years, I don't expect this to really change. We could also put him under the community banner, as I think of him as part of community interest.", "time": "2024-05-09T04:11:46Z", "age": 580305, "count": 7, "author": "cwfitzgerald", "url": "https://github.com/gfx-rs/wgpu/pull/5679#discussion_r1594758670", "platform": "gfx-rs/wgpu"}]}}, "pr:5627": {"status": {"type": "pr", "id": 5627, "summary": "[hal] Document resource destruction methods, and a few other things.", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5627"}, "comments": {"Erich": [{"text": "Sigh, I'd noticed this, and forgotten to remove this conversation from my review draft. Sorry for the noise, and thank you for the patient answer!", "time": "2024-05-07T19:35:03Z", "age": 462902, "count": 24, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5627#discussion_r1592495226", "platform": "gfx-rs/wgpu"}]}}, "pr:5586": {"status": {"type": "pr", "id": 5586, "summary": "[core] Add `lock::observing` module, for analyzing lock acquisition.", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5586"}, "comments": {"Erich": [{"text": "Yeah, I think `cfg` would be better here, and it would be consistent with the existing `cfg(wgpu_validate_locks)`. I'd prefer users never even see the `feature` in their `Cargo.toml` completion in IDEs.\r\n\r\nI won't hard-block on this, tho.", "time": "2024-05-07T21:36:25Z", "age": 470184, "count": 18, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5586#discussion_r1592695954", "platform": "gfx-rs/wgpu"}]}}}}], "counts": {"bmo": {"total": 3, "secure": 0, "confidential": 0}, "github": {"issues": 8, "prs": 4}}}, "Brad": {"bmo": {"1888581": {"status": {"priority": "P2", "type": "defect", "keywords": [], "severity": "S2", "id": 1888581, "summary": "MOZ_CRASH(unsafe precondition(s) violated: slice::from_raw_parts requires the pointer to be aligned and non-null", "groups": [], "status": "RESOLVED"}, "comments": {"Brad": [{"time": "2024-05-02T22:50:01Z", "count": 11, "author": "bwerth@mozilla.com", "text": "Jeff, time to pick the approach you'd prefer to solve this Bug.", "is_private": false, "age": 64200, "platform": "bmo"}, {"count": 12, "time": "2024-05-03T00:12:51Z", "author": "jmuizelaar@mozilla.com", "is_private": false, "text": "I've been meaning to talk this over with mstange.", "age": 69170, "platform": "bmo"}, {"is_private": false, "text": "Pushed by mstange@themasta.com:\nhttps://hg.mozilla.org/integration/autoland/rev/d8bf7ce5ab91\nCopy FontVariation data instead of doing an unsound cast. r=jrmuizel", "author": "pulsebot@bmo.tld", "count": 13, "time": "2024-05-03T19:49:30Z", "age": 139769, "platform": "bmo"}, {"is_private": false, "text": "Backed out for causing webrender related build bustages.\n* [Backout link](https://hg.mozilla.org/integration/autoland/rev/f15d435c23b77f347d15c3359ba5cb45831f9e1b)\n* [Push with failures](https://treeherder.mozilla.org/jobs?repo=autoland&group_state=expanded&resultStatus=success%2Cpending%2Crunning%2Ctestfailed%2Cbusted%2Cexception&fromchange=ede7a0b15af065dee0d4fb5791f71f18ae0a8c1b&searchStr=windows%2C2012%2Cx64%2Copt%2Cbuild-win64%2Fopt%2Cb&tochange=18f15bc7b8bb9b4c04441a542db86c58e39b2eb8&selectedTaskRun=No_Msw8sS-i_IJZXJC5cYg.0) \n* [Failure Log](https://treeherder.mozilla.org/logviewer?job_id=456894533&repo=autoland) \n* Failure line: error[E0599]: no method named `convert_into_vec` found for mutable reference `&mut WrVecU8` in the current scope", "author": "sstanca@mozilla.com", "time": "2024-05-03T20:17:34Z", "count": 14, "age": 141453, "platform": "bmo"}, {"count": 15, "time": "2024-05-03T20:31:20Z", "author": "mstange.moz@gmail.com", "text": "Oh hello!\n\n```rust\n#[cfg(target_os = \"windows\")]\nfn read_font_descriptor(bytes: &mut WrVecU8, index: u32) -> NativeFontHandle {\n    let wchars = bytes.convert_into_vec::<u16>();\n```\n\nSomehow I missed this caller of `convert_into_vec` in all my searches.", "is_private": false, "age": 142279, "platform": "bmo"}, {"text": "https://treeherder.mozilla.org/jobs?repo=try&revision=9d2d17f34eac805125be1783c5f41fb386f95011", "is_private": false, "time": "2024-05-03T20:42:00Z", "count": 16, "author": "mstange.moz@gmail.com", "age": 142919, "platform": "bmo"}, {"author": "pulsebot@bmo.tld", "time": "2024-05-03T22:56:01Z", "count": 17, "text": "Pushed by mstange@themasta.com:\nhttps://hg.mozilla.org/integration/autoland/rev/a33f8c53d37c\nCopy FontVariation data instead of doing an unsound cast. r=jrmuizel", "is_private": false, "age": 150960, "platform": "bmo"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/a33f8c53d37c", "is_private": false, "author": "nfay@mozilla.com", "time": "2024-05-04T09:36:54Z", "count": 18, "age": 189413, "platform": "bmo"}]}}, "1895598": {"status": {"keywords": [], "id": 1895598, "summary": "Make PImageBridge::NewCompositable async", "groups": [], "severity": "--", "priority": "--", "type": "enhancement", "status": "NEW"}, "comments": {"Brad": [{"time": "2024-05-07T20:14:38Z", "count": 0, "author": "bwerth@mozilla.com", "text": "It's not clear that `PImageBridge::NewCompositable` must be a sync call. There's no explanation for it in [`sync-messages.ini`](https://searchfox.org/mozilla-central/rev/54c9b4896fdc1e858cd4942f306d877f1f3d195e/ipc/ipdl/sync-messages.ini#167-168) and it doesn't return anything. If it remains sync, then it makes the hosting thread vulnerable to deadlocks if other work on the thread triggers the call (due to a sync decode of an animated GIF, for example).", "is_private": false, "age": 486877, "platform": "bmo"}, {"text": "It might be worth asking Kelsey about this, as I know there's some WebGL stuff that requires sync IPC for spec reasons. Maybe it ties into that somehow, with the disclaimer that I know nothing about graphics.", "is_private": false, "author": "continuation@gmail.com", "count": 1, "time": "2024-05-07T20:36:47Z", "age": 488206, "platform": "bmo"}]}}, "0000000": {"status": {"id": "0000000", "groups": ["gfx-core-security"], "summary": "[summary redacted]", "keywords": ["crash", "csectype-wildptr", "sec-high", "testcase-wanted"], "status": "NEW", "severity": "---", "type": "defect", "priority": "---", "time": "---", "age": 0}, "comments": {"Brad": [{"author": "---", "count": 24, "time": "---", "is_private": false, "text": "[comment redacted]", "age": 0, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 3, "secure": 1, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Nical": {"bmo": {"1895168": {"status": {"type": "defect", "priority": "P2", "severity": "S2", "id": 1895168, "summary": "Slow canvases block the compositor thread", "groups": [], "keywords": [], "status": "NEW"}, "comments": {"Nical": [{"is_private": false, "author": "nical.bugzilla@gmail.com", "count": 1, "text": "Sotaro, any ideas?", "time": "2024-05-06T15:27:42Z", "age": 383261, "platform": "bmo"}, {"is_private": false, "author": "sotaro.ikeda.g@gmail.com", "count": 2, "text": "There is a bug for removing the wait of RemoteTextureMap::WaitForRemoteTextureOwner() as  Bug 1863257.\n\nWebRenderAPI already has a capability of waiting remote texture, it could be extended as to wait also RemoteTextureOwner.", "time": "2024-05-07T09:05:37Z", "age": 446736, "platform": "bmo"}], "Sotaro": [{"is_private": false, "author": "sotaro.ikeda.g@gmail.com", "count": 2, "text": "There is a bug for removing the wait of RemoteTextureMap::WaitForRemoteTextureOwner() as  Bug 1863257.\n\nWebRenderAPI already has a capability of waiting remote texture, it could be extended as to wait also RemoteTextureOwner.", "time": "2024-05-07T09:05:37Z", "age": 446736, "platform": "bmo"}]}}, "1894847": {"status": {"keywords": [], "priority": "P3", "status": "NEW", "id": 1894847, "type": "defect", "severity": "S3", "summary": "Canvas demo (https://codepen.io/cathbailh/pen/oNORPam) runs poorly on Firefox", "groups": []}, "comments": {"Nical": [{"time": "2024-05-06T06:38:07Z", "count": 3, "author": "nical.bugzilla@gmail.com", "text": "Looks like accelerated canvas is falling off a perf cliff with lots of large paths, combined with the unfortunate synchronization between the compositor thread and the canvas renderer thread (See `RemoteTextureMap::WaitForRemoteTexture` on the compositor thread in the first profile).\n\nI filed bug 1895168 to track the synchronization issue.", "is_private": false, "age": 351486, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 2, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Tim": {"bmo": {"1780311": {"status": {"keywords": ["regression"], "groups": [], "id": 1780311, "summary": "\"Membership Rewards\" image fails to paint on initial logged-in view at SFCU (Stanford Federal Credit Union), until user does something to cause a repaint", "severity": "S4", "priority": "P3", "type": "defect", "status": "RESOLVED"}, "comments": {"Tim": [{"time": "2024-05-02T09:36:06Z", "author": "tnikkel@gmail.com", "is_private": false, "text": "Bug 1805599 landed which I think should fix this. Could you re-test if you get a chance?", "count": 8, "age": 16565, "platform": "bmo"}, {"time": "2024-05-02T16:00:41Z", "text": "Yup, this is fixed - thanks!\n\nI tested before & after accepting the latest Nightly update (Nightly for 2024-05-01 vs 2024-05-02), with my regular browsing profile.\n\n2024-05-01 reproduces the bug\n2024-05-02 does not reproduce the bug\n\n*** This bug has been marked as a duplicate of bug 1805599 ***", "count": 9, "author": "dholbert@mozilla.com", "is_private": false, "age": 39640, "platform": "bmo"}]}}, "1892686": {"status": {"status": "NEW", "priority": "P5", "type": "defect", "keywords": ["assertion", "intermittent-failure", "regression", "test-verify-fail"], "groups": [], "id": 1892686, "summary": "Intermittent Assertion failure: (static_cast<int32_t>(mRenderTextures.size()) - mRenderTexturesLastTime) < maxAllowedIncrease, at /builds/worker/checkouts/gecko/gfx/webrender_bindings/RenderThread.cpp:994", "severity": "S4"}, "comments": {"Tim": [{"count": 8, "time": "2024-05-08T09:15:15Z", "author": "tnikkel@gmail.com", "is_private": false, "text": "I have a patch to increase the delay in frames in the png which will avoid this problem that I'll upload soon.", "age": 533714, "platform": "bmo"}]}}, "1891672": {"status": {"status": "NEW", "priority": "--", "type": "defect", "keywords": ["nightly-community", "regression"], "summary": "Embedded figures in WEBM videos overcompressed/blurred to illegibility in Firefox 125", "groups": [], "id": 1891672, "severity": "S3"}, "comments": {"Tim": [{"author": "tnikkel@gmail.com", "count": 9, "time": "2024-05-02T09:38:17Z", "is_private": false, "text": "Bug 1805599 landed on nightly. Could you re-test on nightly (127)?", "age": 16696, "platform": "bmo"}]}}, "1894445": {"status": {"keywords": ["intermittent-failure", "intermittent-testcase"], "id": 1894445, "summary": "Intermittent image/test/reftest/generic/moz-icon-blank-1-almostref.html == image/test/reftest/generic/moz-icon-blank-1-ref.html | single tracking bug", "groups": [], "priority": "P5", "severity": "S4", "status": "NEW", "type": "defect"}, "comments": {"Tim": [{"count": 6, "time": "2024-05-04T00:17:52Z", "text": "Yes, the test does not expect an identical match, the naming almostref indicates it just wants to test that something reasonable is drawn. So if this was a consistent failure I'd be happy to update the fuzz. The fact that the OS returns different icons to us intermittently though suggests that some aspect of the configuration of these machines is changing on an intermittent basis. If the returned icons are changing what else about the config could be changing? This would make it hard to get consistent results on these machines when writing and running tests.", "author": "tnikkel@gmail.com", "is_private": false, "age": 155871, "platform": "bmo"}, {"author": "orangefactor@bots.tld", "is_private": false, "text": "10 failures in 4059 pushes (0.002 failures/push) were associated with this bug in the last 7 days.\n\nRepository breakdown:\n* autoland: 5\n* mozilla-central: 2\n* try: 1\n* mozilla-beta: 2\n\nPlatform and build breakdown:\n* linux1804-64-tsan-qr: 5\n  * opt: 5\n* linux1804-64-qr: 4\n  * debug: 4\n* linux1804-64-asan-qr: 1\n  * opt: 1\n\nFor more details, see:\nhttps://treeherder.mozilla.org/intermittent-failures/bugdetails?bug=1894445&startday=2024-04-29&endday=2024-05-05&tree=all", "time": "2024-05-06T06:51:32Z", "count": 7, "age": 352291, "platform": "bmo"}, {"text": "I think this bug is a manifestation of the strangely inconsistent choice-of-GTK-theme discussed in Bug 1895092; see that bug for more details.", "author": "dholbert@mozilla.com", "is_private": false, "time": "2024-05-06T18:52:16Z", "count": 8, "age": 395535, "platform": "bmo"}]}}, "1856630": {"status": {"type": "task", "status": "NEW", "severity": "--", "priority": "--", "groups": [], "summary": "Update libjpeg-turbo to version 3.0.3", "id": 1856630, "keywords": []}, "comments": {"Tim": [{"time": "2024-05-09T03:28:59Z", "author": "tnikkel@gmail.com", "count": 7, "text": "What about creating a file like\n\n```\n#define BITS_IN_JSAMPLE 8\n\n#include filetocompile.cpp\n\n#define BITS_IN_JSAMPLE 10\n\n#include filetocompile.cpp\n```\n\nAnd just compiling that, would that work?", "is_private": false, "age": 599338, "platform": "bmo"}]}}, "1814075": {"status": {"priority": "--", "severity": "S3", "status": "RESOLVED", "type": "defect", "keywords": [], "id": 1814075, "summary": "AVIF image fails parsing with a MP4PARSE_STATUS_CHECK_PARSER_STATE_ERR", "groups": []}, "comments": {"Tim": [{"text": "The picture displays now so I think we can close this.\n\n*** This bug has been marked as a duplicate of bug 1817997 ***", "is_private": false, "author": "tnikkel@gmail.com", "time": "2024-05-06T23:36:42Z", "count": 6, "age": 412601, "platform": "bmo"}]}}, "1894284": {"status": {"groups": [], "summary": "Permanent SUMMARY: ThreadSanitizer: data race /builds/worker/checkouts/gecko/image/Decoder.h:173:15 in TakeProgress", "id": 1894284, "keywords": [], "type": "defect", "severity": "S3", "status": "ASSIGNED", "priority": "--"}, "comments": {"Tim": [{"text": "Created attachment 9400189\nBug 1894284. Give image gtests a threadsafe way to wait for decodes in the decode thread pool to finish. r?#gfx-reviewers,aosmond", "is_private": false, "author": "tnikkel@gmail.com", "count": 3, "time": "2024-05-06T02:25:51Z", "age": 336350, "platform": "bmo"}]}}, "1895211": {"status": {"keywords": [], "id": 1895211, "groups": [], "summary": "get the image in imgRequest::OnStopRequest after calling OnDataAvailable because that might create the image", "priority": "--", "severity": "S3", "status": "NEW", "type": "defect"}, "comments": {"Tim": [{"count": 1, "text": "Created attachment 9400214\nBug 1895211. Get the image in imgRequest::OnStopRequest after calling OnDataAvailable because that might create the image. r?#gfx-reviewers,aosmond", "is_private": false, "author": "tnikkel@gmail.com", "time": "2024-05-06T09:36:47Z", "age": 362206, "platform": "bmo"}]}}, "1659788": {"status": {"keywords": ["regression"], "id": 1659788, "groups": [], "summary": "Repeated opacity:0 keyframe waits for mouse movement", "priority": "P2", "status": "ASSIGNED", "severity": "S3", "type": "defect"}, "comments": {"Tim": [{"is_private": false, "time": "2024-05-06T21:58:11Z", "text": "Thanks!\n\nDo you want to upload your test as a patch and then I can review? I will update my patch and we can get this landed. Sorry for the delay.", "author": "tnikkel@gmail.com", "count": 15, "age": 406690, "platform": "bmo"}]}}, "1894723": {"status": {"status": "NEW", "severity": "--", "type": "enhancement", "priority": "--", "id": 1894723, "groups": [], "summary": "Retaining display lists slows down speedometer3 significantly", "keywords": []}, "comments": {"Tim": [{"is_private": false, "text": "I guess generally speaking the types of paints we see during a run of speedometer3 aren't the types of paints where we expect retained display lists to be a win in general. The paints tend to change a lot of things on the page from my impression, whereas retained display lists tends to shine when we are changing a few things.\n\nI did a few try pushes to explore this a little bit.\n\nThis is m-c vs retained display lists disabled, replicated smaug's link above, I did this to validate that I was doing the comparison correctly.\n\nhttps://treeherder.mozilla.org/perfherder/comparesubtest?originalProject=try&newProject=try&newRevision=8bf3525829e1769583637007788d61ff2eb56f74&originalSignature=4586009&newSignature=4586009&framework=13&application=firefox&originalRevision=15e317fb27a9531706076892063970bf2ec815ec&page=1&showOnlyConfident=1&replicates=1\n\nThis is disabling retained display list in chrome only vs mc, no perf change on sp3 it seems.\n\nhttps://treeherder.mozilla.org/perfherder/comparesubtest?originalProject=try&newProject=try&newRevision=db80c74bb6319345e26e36a095f979cc16afa10d&originalSignature=4586009&newSignature=4586009&framework=13&application=firefox&originalRevision=15e317fb27a9531706076892063970bf2ec815ec&page=1&showOnlyConfident=1&replicates=1\n\nThis is so called \"retain.sc\" mode which simplifies a lot of retained display list merging code by caching and invalidating display lists at the stacking context level. This compares retain.sc vs plain m-c. This seems to be a nice win.  This project was mostly complete but didn't quite get pushed over the finish line.\n\nhttps://treeherder.mozilla.org/perfherder/comparesubtest?originalProject=try&newProject=try&newRevision=a5f7f434b62ad27f97921b044a0c63cee70e2615&originalSignature=4586009&newSignature=4586009&framework=13&application=firefox&originalRevision=15e317fb27a9531706076892063970bf2ec815ec&page=1&showOnlyConfident=1&replicates=1\n\nThis bumps the rebuild limit (the number of modified frames before we bail out of an incremental retained display list update and do a full rebuild) down to 100 from 500. This seems to be a nice win as well. I'm not sure how this limit was choosen, we'd want to look into why it was choosen as well as compare on some other testcases before changing it.\n\nhttps://treeherder.mozilla.org/perfherder/comparesubtest?originalProject=try&newProject=try&newRevision=eab53a8df5b544885afaeb989d940c857ac32934&originalSignature=4586009&newSignature=4586009&framework=13&application=firefox&originalRevision=15e317fb27a9531706076892063970bf2ec815ec&page=1&showOnlyConfident=1&replicates=1", "author": "tnikkel@gmail.com", "count": 1, "time": "2024-05-07T05:58:14Z", "age": 435493, "platform": "bmo"}]}}, "1870415": {"status": {"priority": "--", "severity": "S3", "status": "RESOLVED", "type": "defect", "keywords": ["assertion", "pernosco", "regression", "testcase"], "id": 1870415, "summary": "Hit MOZ_CRASH(Item found was in the wrong list! type 281 (outer type was 263 at depth 2, now is 3)) at /builds/worker/checkouts/gecko/layout/painting/nsDisplayList.h:2210", "groups": []}, "comments": {"Tim": [{"text": "Created attachment 9400190\nBug 1870415. In nsCanvasFrame::BuildDisplayList, only capture background items we create in our blend container item instead of any items that might be in the display list already. r?#gfx-reviewers,#layout-reviewers,mstange\n\n\nWhen we call nsCanvasFrame::BuildDisplayList from nsHTMLScrollFrame::BuildDisplayList there is already a compositor hit test item in it, created here https://searchfox.org/mozilla-central/rev/ff08e36e1f368bd193b54f569dbd79105b50f9a0/layout/generic/nsGfxScrollFrame.cpp#4146\n\nIf we create a blend container item in nsCanvasFrame::BuildDisplayList it puts everything that might already exist in the display list inside the blend container item. It should only do this for the background items that we just created as this is for background blend mode, we are only blending within the background of this frame.\n\nIn the fuzz testcase we then have a partial display list build that visits the root scroll frame (because a scroll bar is dirty), so it builds the compositor hit test item for the canvas frame (the child of the scroll frame), but canvas frame is not modified, so we don't descend into it, and we don't call nsCanvasFrame::BuildDisplayList, so the compositor hit test item does not get wrapped in the blend container, and thus it has moved in the display list without being marked modified.", "is_private": false, "author": "tnikkel@gmail.com", "time": "2024-05-06T02:51:03Z", "count": 33, "age": 337862, "platform": "bmo"}, {"author": "pulsebot@bmo.tld", "time": "2024-05-06T21:14:34Z", "count": 34, "text": "Pushed by tnikkel@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/1ddb32136a37\nIn nsCanvasFrame::BuildDisplayList, only capture background items we create in our blend container item instead of any items that might be in the display list already. r=mstange,layout-reviewers,emilio", "is_private": false, "age": 404073, "platform": "bmo"}, {"count": 35, "time": "2024-05-06T22:06:24Z", "author": "wptsync@mozilla.bugs", "is_private": false, "text": "Created web-platform-tests PR https://github.com/web-platform-tests/wpt/pull/46117 for changes under testing/web-platform/tests", "age": 407183, "platform": "bmo"}, {"is_private": false, "text": "https://hg.mozilla.org/mozilla-central/rev/1ddb32136a37", "count": 36, "time": "2024-05-07T09:15:29Z", "author": "ctuns@mozilla.com", "age": 447328, "platform": "bmo"}, {"author": "wptsync@mozilla.bugs", "count": 37, "time": "2024-05-07T12:19:17Z", "text": "Upstream PR merged by moz-wptsync-bot", "is_private": false, "age": 458356, "platform": "bmo"}]}}, "1888586": {"status": {"keywords": ["assertion", "pernosco", "testcase"], "id": 1888586, "groups": [], "summary": "Hit MOZ_CRASH(Item found was in the wrong list! type 278 (outer type was 263 at depth 2, now is 2)) at /builds/worker/checkouts/gecko/layout/painting/nsDisplayList.h:2215", "priority": "--", "severity": "S3", "status": "RESOLVED", "type": "defect"}, "comments": {"Tim": [{"time": "2024-05-06T02:50:33Z", "author": "tnikkel@gmail.com", "count": 14, "text": "I included the testcase here in my patch in bug 1870415.\n\n*** This bug has been marked as a duplicate of bug 1870415 ***", "is_private": false, "age": 337832, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 12, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Ashley": {"bmo": {"1824502": {"status": {"severity": "--", "id": 1824502, "summary": "WR SVG filters: Lay the groundwork for natively rendering SVG filters", "groups": [], "keywords": [], "type": "task", "priority": "--", "status": "ASSIGNED"}, "comments": {"Ashley": [{"author": "ahale@mozilla.com", "is_private": false, "text": "Tests are green on those android devices, so I am attempting to land D209646 again.  This doesn't bring any new user-visible features, but may cause a slight performance regression due to the WebRender FilterOp struct becoming larger, talos tests that I ran previously showed it wasn't very notable.\n\nThe bigger patch is D174208 which is still a work in progress as I address test failures (which only appeared after rebasing recently), it will be the user-visible part of this, but initially only enabled in Nightly channel, for that I'll need to add release notes.", "count": 13, "time": "2024-05-09T04:14:00Z", "age": 602039, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 1, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Jamie": {"bmo": {"1895585": {"status": {"status": "NEW", "type": "defect", "priority": "--", "severity": "--", "id": 1895585, "groups": [], "summary": "Broken subpixel aa in some cases", "keywords": ["nightly-community", "regression"]}, "comments": {"Jamie": [{"text": "Glenn, presumably we need to take the user's AA settings in to account when deciding whether to create a scroll root for sticky items. I see we already do that for deciding whether fixed position items get a slice: https://searchfox.org/mozilla-central/rev/8ec3cc0472ad4f51b254728d024b696eaba82ba0/gfx/wr/webrender/src/tile_cache.rs#348\n\nBut that pref `gfx.webrender.quality.force-subpixel-aa-where-possible` is false by default, so it's possible users would complain this patch prevents subpixel AA too often anyway. Do we tell those users to use the force pref in that case, or do we perhaps want to base this simply on whether subpixel AA is enabled or not? (and FWIW it is disabled by default on Android, which was the original motivation behind 1886739.)", "is_private": false, "time": "2024-05-08T12:53:05Z", "author": "jnicol@mozilla.com", "count": 6, "age": 546784, "platform": "bmo"}, {"text": "(In reply to Jamie Nicol [:jnicol] from comment #5)\n> Donal, can we just back out bug 1886739 on the release branch? Or do I need to make a patch?\n\n:jnicol, I can back out bug 1886739 from release. \nShould we also back out from central? Asking since 127 goes to beta next week.", "is_private": false, "time": "2024-05-08T13:16:37Z", "count": 7, "author": "dmeehan@mozilla.com", "age": 548196, "platform": "bmo"}, {"count": 8, "author": "dmeehan@mozilla.com", "time": "2024-05-08T13:39:09Z", "is_private": false, "text": "(In reply to Donal Meehan [:dmeehan] from comment #7)\n> Should we also back out from central? Asking since 127 goes to beta next week.\n\nDiscussed on slack, we will only back out from release", "age": 549548, "platform": "bmo"}]}}, "1894902": {"status": {"status": "RESOLVED", "severity": "--", "summary": "Temporarily disable low-quality pinch zoom", "id": 1894902, "groups": [], "keywords": [], "type": "task", "priority": "--"}, "comments": {"Jamie": [{"is_private": false, "text": "Created attachment 9400211\nBug 1894902 - Temporarily disable low-quality pinch zoom on non-nightly r?#gfx-reviewers\n\n\nIt is causing flickering seams while zooming (bug 1894106), so we\nshould disable it whilst working on the proper fix.\n\nOriginal Revision: https://phabricator.services.mozilla.com/D209360", "author": "jnicol@mozilla.com", "count": 3, "time": "2024-05-06T08:45:52Z", "age": 359151, "platform": "bmo"}, {"author": "phab-bot@bmo.tld", "count": 4, "time": "2024-05-06T08:49:05Z", "is_private": false, "text": "### beta Uplift Approval Request\n- **User impact if declined**: Flickering white or dark seams when zooming on android\n- **Code covered by automated testing**: yes\n- **Fix verified in Nightly**: yes\n- **Needs manual QE test**: no\n- **Steps to reproduce for manual QE testing**: N/A\n- **Risk associated with taking this patch**: Low\n- **Explanation of risk level**: Disables a recently enabled optimisation due to a bug. The path we are switching too is well tested \n- **String changes made/needed**: None\n- **Is Android affected?**: yes", "age": 359344, "platform": "bmo"}, {"time": "2024-05-06T12:52:00Z", "author": "dmeehan@mozilla.com", "count": 5, "text": "Switcing to a release uplift request since Fx126 is in RC week.\nThis may not make 126.0 RC1, but it can be included later in a ride along if there's an RC2, dot release, etc.", "is_private": false, "age": 373919, "platform": "bmo"}, {"count": 6, "author": "phab-bot@bmo.tld", "time": "2024-05-06T12:53:14Z", "is_private": false, "text": "### release Uplift Approval Request\n- **User impact if declined**: Flickering white or dark seams when zooming on android\n- **Code covered by automated testing**: yes\n- **Fix verified in Nightly**: yes\n- **Needs manual QE test**: no\n- **Steps to reproduce for manual QE testing**: N/A\n- **Risk associated with taking this patch**: Low\n- **Explanation of risk level**: Disables a recently enabled optimisation due to a bug. The path we are switching too is well tested\n- **String changes made/needed**: None\n- **Is Android affected?**: yes", "age": 373993, "platform": "bmo"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/74e7812d9df9", "is_private": false, "time": "2024-05-06T16:10:15Z", "count": 7, "author": "sstanca@mozilla.com", "age": 385814, "platform": "bmo"}, {"text": "https://hg.mozilla.org/releases/mozilla-release/rev/9926447037e3", "is_private": false, "time": "2024-05-08T13:22:57Z", "count": 8, "author": "pulsebot@bmo.tld", "age": 548576, "platform": "bmo"}]}}, "1894106": {"status": {"status": "NEW", "summary": "Seams between tiles flicker during zooming on Android", "groups": [], "id": 1894106, "severity": "S3", "keywords": [], "type": "defect", "priority": "--"}, "comments": {"Jamie": [{"time": "2024-05-03T13:02:18Z", "count": 6, "text": "(In reply to Jamie Nicol [:jnicol] from comment #4)\n> Again, fixing that solves some of the seams. But there are still some seams present, and when captured renderdoc is still showing a discrepancy between the clip rect and the world rect. However, I cannot for the life of me see why when the above issues are gone.\n> \n> In any case, it seems we can resolve this issue by both replacing the local-space rect and transform inputs to the shader with a device-space rect, and additionally fix the ScaleOffset::map_rect implementation\n\nSpeaking with Glenn and Ashley, we think it's plausible that the device rect calculated on the CPU could differ than that calculated on the GPU, even when using the same calculation with the same inputs. (Which is the case after changing map_rect() to operate on the min and max points rather than the origin and size). In which case I believe the only option here is to only perform the transformation on the CPU, and have the composite shader exclusively deal in device space.\n\nIn any case, even after doing so there are still some seams! This time, it's because the even local rects of adjacent tiles have a gap between them, so of course the corresponding device rects do! Again this is due to floating point innacuracies, and because we construct the local rect from an origin and size rather than two points, [here](https://searchfox.org/mozilla-central/rev/386c7f17b2421374930a447c9f424910551b659d/gfx/wr/webrender/src/picture.rs#956). Changing that to use two points fixes the remaining seams, as far as I can tell.\n\nSo to summarize, in order to fix the seams we must:\n* Transform to device space on CPU and have composite shader only use device space\n* Fix ScaleOffset::(un)map_rect to operate on points instead of origin and size\n* Make Tile::local_rect constructed from points instead of origin and size", "is_private": false, "author": "jnicol@mozilla.com", "age": 115337, "platform": "bmo"}]}}, "1894929": {"status": {"groups": [], "keywords": [], "priority": "--", "type": "defect", "id": 1894929, "severity": "S2", "summary": "Surface recycling on Android in GLScreenBuffer is broken", "status": "NEW"}, "comments": {"Jamie": [{"count": 0, "author": "jnicol@mozilla.com", "time": "2024-05-03T14:28:09Z", "text": "I noticed this while investigating bug 1892716. It exacerbates the issue but it's not the real culprit.\n\nIn GLScreenBuffer.cpp, on Android we use a pool of `SharedSurface_SurfaceTexture`s, as allocating Android Surfaces is expensive. After we obtain a surface from the pool (or allocate a new one if necessary, we immediately push the surface to the back of the pool [here](https://searchfox.org/mozilla-central/rev/386c7f17b2421374930a447c9f424910551b659d/gfx/gl/GLScreenBuffer.cpp#58).\n\nSome time later, we push the Surface to the back of the pool *again*, [here](https://searchfox.org/mozilla-central/rev/386c7f17b2421374930a447c9f424910551b659d/gfx/gl/GLScreenBuffer.cpp#82) in `StoreRecycledSurface`.\n\nNow we have the same Surface in the pool multiple times, which presumably could cause some issues with selecting the wrong Surface at the wrong time. But additionally it means that the pool size can grow larger than expected, and due to [this check](https://searchfox.org/mozilla-central/rev/386c7f17b2421374930a447c9f424910551b659d/gfx/gl/GLScreenBuffer.cpp#49) using `==` instead of `>=`, we choose not to use an existing surface and allocate a new one instead. We end up allocating a new Surface every time we try to acquire one.\n\nKelsey, Sotaro, what is the correct fix here? I think we should defensively either add an assert that the pool size is not larger than expected, or switch the condition to `>=`. But how should we avoid adding duplicate surfaces to the pool? Do we remove the call [here](https://searchfox.org/mozilla-central/rev/386c7f17b2421374930a447c9f424910551b659d/gfx/gl/GLScreenBuffer.cpp#58), or should `StoreRecycledSurface()` not be being called on Android?", "is_private": false, "age": 120488, "platform": "bmo"}, {"count": 1, "author": "jgilbert@mozilla.com", "time": "2024-05-07T16:11:41Z", "text": "@sotaro Can you take this?", "is_private": false, "age": 472300, "platform": "bmo"}], "Kelsey": [{"count": 1, "author": "jgilbert@mozilla.com", "time": "2024-05-07T16:11:41Z", "text": "@sotaro Can you take this?", "is_private": false, "age": 472300, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 4, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Kelsey": {"bmo": {"1865747": {"status": {"keywords": ["topcrash"], "groups": [], "priority": "--", "summary": "Firefox crashes on Google Maps", "severity": "S2", "type": "defect", "id": 1865747, "status": "NEW"}, "comments": {"Kelsey": [{"time": "2024-05-02T20:38:05Z", "count": 15, "text": "@ekurzinger Do you have any ideas?", "is_private": false, "author": "jgilbert@mozilla.com", "age": 56284, "platform": "bmo"}, {"time": "2024-05-03T01:14:58Z", "count": 16, "text": "Is it possible Firefox is passing an invalid DRM FD to gbm_create_device? As far as I can tell by inspection, that would be the only way our create_device function could segfault. We pass the provided DRM fd to drmGetVersion and then dereference the returned pointer without checking if it's NULL, which it would be if the fd was invalid. So the proximate cause may indeed be a driver bug, but the root cause would still be in Firefox.\n\nP.S. ignore \"NvRmShimImportMemContextFromFd\", I suspect that's just appearing in the back-trace as an artifact. That function is only used on our Tegra mobile platform.", "is_private": false, "author": "ekurzinger@nvidia.com", "age": 72897, "platform": "bmo"}, {"author": "jmuizelaar@mozilla.com", "is_private": false, "text": "Martin, do you think we might be passing a in a bad fd?", "count": 17, "time": "2024-05-07T15:31:57Z", "age": 469916, "platform": "bmo"}, {"time": "2024-05-07T17:23:32Z", "author": "assaf_hershko@hotmail.com", "is_private": false, "text": "Just wanted to say that since this can be duplicated consistently on my machine, if there's a test build that you want me to try I'm happy to help.", "count": 18, "age": 476611, "platform": "bmo"}, {"count": 19, "text": "The crash here is caused by driver misconfiguration, at least https://crash-stats.mozilla.org/report/index/a2d555e5-5d4a-44ee-80f4-b68a70231210\nFrom the backtrace and gfx info you use your primary Intel GFX / Mesa but dmabuf creation is redirected to NV drivers component libnvidia-allocator.so.1 So just remove libnvidia-allocator.so.1 file (and related ones).\nI guess it's broken NVIDIA binary driver setup here as this setup can't work. Looks like  NVIDIA binary uninstall was incomplete or broken or so. Also 'consistent reproduction' indicates it.", "is_private": false, "author": "stransky@redhat.com", "time": "2024-05-07T18:09:07Z", "age": 479346, "platform": "bmo"}, {"time": "2024-05-07T18:11:45Z", "is_private": false, "author": "stransky@redhat.com", "count": 20, "text": "To be clear here - you can't create dmabuf surface on NVIDIA gfx card and use it on Intel as you try here. That just doesn't work for many good reasons.", "age": 479504, "platform": "bmo"}, {"time": "2024-05-07T18:16:52Z", "text": "libnvidia-allocator.so.1 seems to come from nvidia-utils package. Majority of the crashes comes from \n\n```\nArch Linux \t179 \t54.7%\nNixOS 24.05 (Uakari) \t58 \t17.7%\nNixOS 23.11 (Tapir) \t31 \t9.5%\n```\n\nI wonder if that's distro side breakage when nvidia-utils is installed by default or so?", "count": 21, "author": "stransky@redhat.com", "is_private": false, "age": 479811, "platform": "bmo"}, {"is_private": false, "author": "assaf_hershko@hotmail.com", "count": 22, "text": "This is (or rather was) a fresh install of EndeavourOS with standard Nvidia drivers (installed by the distro as part of the installation process), so if there was a driver misconfiguration it's in whatever the distro is doing. Reproduced consistently, even if I wiped the drive and reinstalled completely. So whatever the issue is, it's baked in there somewhere. I'm happy to reinstall and try again if that would help.\n\nNote that the guidance \"If you encounter crashes in Firefox, remove the line env = GBM_BACKEND,nvidia-drm\" appears in the Hyprland official guide (https://wiki.hyprland.org/Nvidia) so whatever the crash is, it's not just me.", "time": "2024-05-08T11:18:34Z", "age": 541113, "platform": "bmo"}, {"time": "2024-05-08T11:19:05Z", "is_private": false, "author": "assaf_hershko@hotmail.com", "count": 23, "text": "(And of course to confirm - EndeavourOS is indeed Arch)", "age": 541144, "platform": "bmo"}, {"author": "assaf_hershko@hotmail.com", "is_private": false, "text": "Having said that - note the crash does not occur on Chromium. It's a Firefox only issue. So even if the driver is misconfigured, the question remains why can Chromium handle it just fine, whereas Firefox crashes.", "count": 24, "time": "2024-05-08T11:21:06Z", "age": 541265, "platform": "bmo"}]}}, "1894929": {"status": {"groups": [], "keywords": [], "priority": "--", "type": "defect", "id": 1894929, "severity": "S2", "summary": "Surface recycling on Android in GLScreenBuffer is broken", "status": "NEW"}, "comments": {"Jamie": [{"count": 0, "author": "jnicol@mozilla.com", "time": "2024-05-03T14:28:09Z", "text": "I noticed this while investigating bug 1892716. It exacerbates the issue but it's not the real culprit.\n\nIn GLScreenBuffer.cpp, on Android we use a pool of `SharedSurface_SurfaceTexture`s, as allocating Android Surfaces is expensive. After we obtain a surface from the pool (or allocate a new one if necessary, we immediately push the surface to the back of the pool [here](https://searchfox.org/mozilla-central/rev/386c7f17b2421374930a447c9f424910551b659d/gfx/gl/GLScreenBuffer.cpp#58).\n\nSome time later, we push the Surface to the back of the pool *again*, [here](https://searchfox.org/mozilla-central/rev/386c7f17b2421374930a447c9f424910551b659d/gfx/gl/GLScreenBuffer.cpp#82) in `StoreRecycledSurface`.\n\nNow we have the same Surface in the pool multiple times, which presumably could cause some issues with selecting the wrong Surface at the wrong time. But additionally it means that the pool size can grow larger than expected, and due to [this check](https://searchfox.org/mozilla-central/rev/386c7f17b2421374930a447c9f424910551b659d/gfx/gl/GLScreenBuffer.cpp#49) using `==` instead of `>=`, we choose not to use an existing surface and allocate a new one instead. We end up allocating a new Surface every time we try to acquire one.\n\nKelsey, Sotaro, what is the correct fix here? I think we should defensively either add an assert that the pool size is not larger than expected, or switch the condition to `>=`. But how should we avoid adding duplicate surfaces to the pool? Do we remove the call [here](https://searchfox.org/mozilla-central/rev/386c7f17b2421374930a447c9f424910551b659d/gfx/gl/GLScreenBuffer.cpp#58), or should `StoreRecycledSurface()` not be being called on Android?", "is_private": false, "age": 120488, "platform": "bmo"}, {"count": 1, "author": "jgilbert@mozilla.com", "time": "2024-05-07T16:11:41Z", "text": "@sotaro Can you take this?", "is_private": false, "age": 472300, "platform": "bmo"}], "Kelsey": [{"count": 1, "author": "jgilbert@mozilla.com", "time": "2024-05-07T16:11:41Z", "text": "@sotaro Can you take this?", "is_private": false, "age": 472300, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 2, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "JimB": {"bmo": {}, "github": [{"repo": "gfx-rs/wgpu", "issues": {"issue:5674": {"status": {"type": "issue", "id": 5674, "summary": "[core] Documentation and cleanups for `LifetimeTracker`", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5674"}, "comments": {"JimB": [{"text": "Since I indulged in a rant: There is at least one case where `for_each` makes sense: at the end of a long chain of iterator adaptors. In that case, a `for_each` loop puts the variables being bound for each iteration right above the code that uses them, rather than at the head of the `for` loop, on the far side of the iterator chain.", "time": "2024-05-07T02:35:30Z", "age": 401729, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/pull/5674#issuecomment-2096866128", "platform": "gfx-rs/wgpu"}, {"text": "> ... for loops ...\r\n\r\nI agree, never been a big fan of for_each.", "time": "2024-05-07T09:53:15Z", "age": 427994, "count": 2, "author": "cwfitzgerald", "url": "https://github.com/gfx-rs/wgpu/pull/5674#issuecomment-2097395876", "platform": "gfx-rs/wgpu"}]}}, "issue:5662": {"status": {"type": "issue", "id": 5662, "summary": "Deadlock in 0.20.0 and trunk", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/5662"}, "comments": {"JimB": [{"text": "Actually, it might suffice simply to know which lock each thread is trying to acquire, and I could figure out which other ones it must be holding.", "time": "2024-05-05T02:37:29Z", "age": 229048, "count": 3, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/5662#issuecomment-2094372940", "platform": "gfx-rs/wgpu"}, {"text": "The deadlock appears to be caused by:\r\n\r\n- `command_encoder_end_compute_pass` acquires the buffer read lock before the bind group read lock here: https://github.com/gfx-rs/wgpu/blob/edf1a86148d1a62da857633fb224aa569f21ce4e/wgpu-core/src/command/compute_command.rs#L82-L83\r\n- `command_encoder_end_render_pass` acquires the bind group read lock before the buffer read lock here: https://github.com/gfx-rs/wgpu/blob/ad6774f7bb9c327238322d9e5beeb1c9a0c6e89d/wgpu-core/src/command/render.rs#L1385-L1389\r\n\r\nIn the backtraces above, there is one thread in the first location holding the buffers lock and trying to acquire the bind_groups lock, and one thread in the second location holding most locks (including the bind_group one) and trying to acquire the buffers lock.\r\n\r\nWhile these are all RWLocks, and these are all read lock acquisitions, there are also several threads trying to acquire write locks for both the bind_group and buffer storages. Due to the fair RWLock implementation in parking_lot, this makes the attempts to acquire read locks block until the write lock can be acquired, which then completes the deadlock.\r\n\r\nIt sounds like `rank::REGISTRY_STORAGE` should be split into one rank per resource to catch mistakes like this, maybe?", "time": "2024-05-07T18:04:49Z", "age": 457488, "count": 4, "author": "SludgePhD", "url": "https://github.com/gfx-rs/wgpu/issues/5662#issuecomment-2098249222", "platform": "gfx-rs/wgpu"}]}}, "issue:5627": {"status": {"type": "issue", "id": 5627, "summary": "[hal] Document resource destruction methods, and a few other things.", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5627"}, "comments": {"JimB": [{"text": "@ErichDonGubler I've accepted most of your suggestions, but had some questions.", "time": "2024-05-07T09:00:18Z", "age": 424817, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/pull/5627#issuecomment-2097354942", "platform": "gfx-rs/wgpu"}]}}, "issue:5586": {"status": {"type": "issue", "id": 5586, "summary": "[core] Add `lock::observing` module, for analyzing lock acquisition.", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5586"}, "comments": {"JimB": [{"text": "@ErichDonGubler I'm \"out\" but not \"out\", if you know what I mean. It'd be helpful to me to get this landed this week.", "time": "2024-05-06T22:02:24Z", "age": 385343, "count": 6, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/pull/5586#issuecomment-2096394407", "platform": "gfx-rs/wgpu"}, {"text": "@jimblandy: To be clear, I don't intend to postpone longer than a day or so. I hate leaving open PRs to potentially bitrot and cause headaches.", "time": "2024-05-06T22:13:31Z", "age": 386010, "count": 7, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5586#issuecomment-2096416774", "platform": "gfx-rs/wgpu"}, {"text": "@jimblandy: I noticed you'd added some link entries in `ObservationLog::locations_seen` for symbols that were already in scope. Just pushed a `fixup!` (429040da8) to remove those", "time": "2024-05-07T22:23:50Z", "age": 473029, "count": 8, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5586#issuecomment-2098846719", "platform": "gfx-rs/wgpu"}, {"text": "Just rebased this change, and autosquashed.", "time": "2024-05-07T22:26:09Z", "age": 473168, "count": 9, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5586#issuecomment-2098851041", "platform": "gfx-rs/wgpu"}]}}, "issue:5560": {"status": {"type": "issue", "id": 5560, "summary": "`wgpu-core` submission tracking fails to avoid resource management overhead", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/5560"}, "comments": {"JimB": [{"text": "Here's another problem which would be fixed by taking a more straightforward ownership approach:\r\n\r\nCheck my work, but it seems to me that, once a resource gets added to `LifetimeTracker::suspected_resources`, it will remain there for the rest of its or the `Device`'s lifetime, whichever is shorter. It will get checked on every `maintain`, until it actually dies or the `Device` is closed.\r\n\r\nThe only thing that I can see that ever removes something from a `LifetimeTracker::suspected_resources` field is `LifetimeTracker::triage_resources`, and that only does so if the resource has been abandoned. `ResourceMaps::clear` is only called at `Device` shutdown.\r\n\r\nThis seems very bad. A resource that belongs to a bind group will become suspected when the bind group is dropped, and then it'll just stay that way, getting checked over and over for no reason.", "time": "2024-05-07T02:20:38Z", "age": 400837, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/5560#issuecomment-2096837733", "platform": "gfx-rs/wgpu"}]}}, "issue:5559": {"status": {"type": "issue", "id": 5559, "summary": "Vulkan Swapchain and Submit Synchronization Incorrect", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/5559"}, "comments": {"JimB": [{"text": "> So I thought about that, and you can wait and signal the same timeline semaphore, but we can't assume timeline semaphores exist, so we'd need a binary semaphore fallback anyway. \n\nRight - my point being, `vulkan::Fence` is exactly a timeline semaphore with a vkFence collection as a fallback. I added some doc comments to `vulkan:: Fence` about this just recently.\n", "time": "2024-05-06T23:19:45Z", "age": 389984, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/5559#issuecomment-2096536508", "platform": "gfx-rs/wgpu"}, {"text": "We need a timeline semaphore with a `vk::Semaphore` fallback, so I'm not sure we can share the infra.", "time": "2024-05-07T00:10:38Z", "age": 393037, "count": 2, "author": "cwfitzgerald", "url": "https://github.com/gfx-rs/wgpu/issues/5559#issuecomment-2096626782", "platform": "gfx-rs/wgpu"}]}}, "issue:5504": {"status": {"type": "issue", "id": 5504, "summary": "[wgpu-hal] Upgrade to `ash 0.38`", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5504"}, "comments": {"JimB": [{"text": "> Before continuing further, it has to be said that those repeated \"Changes requested\" are quite off-putting. In the projects I work on that button is reserved as a heavy ban-hammer that basically means a full \"NAK, go back to the drawing board\".\r\n\r\nI certainly don't intend my \"changes requested\" to be discouraging to anyone! I've always took them to mean exactly what they say: I'm requesting changes. I think the distinction I'm hoping to make is: If I only have suggestions, then I'll note them in the comments and \"Approve\", but if I see a bug or something that I think needs to be done differently, then I mark it \"Changes requested\". If I really wanted to end discussion of the whole approach, I'd close the PR. (What Connor said, basically.)\r\n\r\nAnyway - just to say it out loud: @MarijnS95, thank you very much for this PR! Having `wgpu` be an open-source project is such a welcome contrast to most of the Firefox code base, whose contributors are almost exclusively Mozilla employees. I don't think Firefox's WebGPU implementation could possibly succeed with such a small team (me, @teoxoy, @ErichDonGubler, and @nical part-time) if we didn't also have contributions coming in on the wgpu side.\r\n\r\nedit: [this comment](https://github.com/gfx-rs/wgpu/pull/5504#issuecomment-2091294413) from Erich is also a reflection of the value Mozilla, for our sake, finds in these kinds of contributions.", "time": "2024-05-03T05:28:33Z", "age": 66512, "count": 5, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/pull/5504#issuecomment-2091902770", "platform": "gfx-rs/wgpu"}, {"text": "I think our community chat would be a good place to continue this discussion about perceptions with PR statuses, so I started a thread in Matrix: https://matrix.to/#/!FZyQrssSlHEZqrYcOb:matrix.org/$_lc2jnjTVMqi3SD2nsjSYmFdSSAlt7cO0wBahOcfT-0?via=mozilla.org&via=matrix.org&via=envs.net", "time": "2024-05-03T06:43:27Z", "age": 71006, "count": 6, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5504#issuecomment-2091961963", "platform": "gfx-rs/wgpu"}, {"text": "I think once merge conflicts are resolved, it is ready to go", "time": "2024-05-09T02:35:01Z", "age": 574500, "count": 7, "author": "cwfitzgerald", "url": "https://github.com/gfx-rs/wgpu/pull/5504#issuecomment-2101380502", "platform": "gfx-rs/wgpu"}]}}}, "prs": {"pr:5627": {"status": {"type": "pr", "id": 5627, "summary": "[hal] Document resource destruction methods, and a few other things.", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5627"}, "comments": {"JimB": [{"text": "The idea of using the http: scheme was to avoid complaints from `cargo doc` even when Vulkan isn't enabled.", "time": "2024-05-07T09:02:03Z", "age": 424922, "count": 23, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/pull/5627#discussion_r1591754847", "platform": "gfx-rs/wgpu"}, {"text": "Sigh, I'd noticed this, and forgotten to remove this conversation from my review draft. Sorry for the noise, and thank you for the patient answer!", "time": "2024-05-07T19:35:03Z", "age": 462902, "count": 24, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5627#discussion_r1592495226", "platform": "gfx-rs/wgpu"}]}}, "pr:5586": {"status": {"type": "pr", "id": 5586, "summary": "[core] Add `lock::observing` module, for analyzing lock acquisition.", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/5586"}, "comments": {"JimB": [{"text": "The `usize` vs. `u64` question is another reason to keep the two definitions of `Action` separate.", "time": "2024-05-03T23:46:21Z", "age": 132380, "count": 14, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/pull/5586#discussion_r1589536640", "platform": "gfx-rs/wgpu"}, {"text": "Also I'm going to pretty hard veto \"#[path]` anywhere, it throws RA for a total loop.", "time": "2024-05-04T09:34:44Z", "age": 167683, "count": 15, "author": "cwfitzgerald", "url": "https://github.com/gfx-rs/wgpu/pull/5586#discussion_r1589871220", "platform": "gfx-rs/wgpu"}, {"text": "@cwfitzgerald, @jimblandy: Ah, I hadn't been aware of that until I tried it myself. Yuck! Upstream tracking: https://github.com/rust-lang/rust-analyzer/issues/3898\r\n\r\nIf this were not an issue, I actually have working local changes that use the following to resolve @jimblandy's concerns (which I would have submitted as a follow-up PR):\r\n\r\n* `&str` vs. `String` can be papered over with `Cow<'_, str>`.\r\n* `usize` and `u64` can be separated out with a generic. We _could_ also just use `u64` everywhere, and widen pointers as necessary in `wgpu-core`.\r\n\r\n\u2026but I'm not willing to break `rust-analyzer` flow for something controversial. lezduit!\r\n\r\n> If there are problems, we'll get errors from serde.\r\n\r\nThis is correct with this current code. I actually just noticed that there's one place where this might be wrong if we ever add an optional field and don't use `serde(deny_unknown_fields)` ([playground link](https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=6ab13214d2463b877d102f4a9ab6ed79)). This isn't blocking, since the case doesn't apply here, but I've pushed up the fix with e13c61405, since the fix is easy.", "time": "2024-05-07T20:40:30Z", "age": 466829, "count": 16, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5586#discussion_r1592607740", "platform": "gfx-rs/wgpu"}, {"text": "Just validated that this works locally, so no blocking concern here.\r\n\r\nI think it would be more direct to link to `LockRankNumber`, and that the entry for `LockRankNumber` suggest examining the `source` link directly:\r\n\r\n![image](https://github.com/gfx-rs/wgpu/assets/658538/f78b21c1-6655-4146-953a-a8bf82fee5df)\r\n\r\n\u2026so that the correct line numbers are highlighted, and the user doesn't need to hunt around:\r\n\r\n![image](https://github.com/gfx-rs/wgpu/assets/658538/ed4d954f-92f6-4aa5-8127-3abac3f2c4b8)\r\n\r\n\u2026but I'm happy to iterate on that in a follow-up PR, if you're interested.", "time": "2024-05-07T21:34:29Z", "age": 470068, "count": 17, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5586#discussion_r1592693465", "platform": "gfx-rs/wgpu"}, {"text": "Yeah, I think `cfg` would be better here, and it would be consistent with the existing `cfg(wgpu_validate_locks)`. I'd prefer users never even see the `feature` in their `Cargo.toml` completion in IDEs.\r\n\r\nI won't hard-block on this, tho.", "time": "2024-05-07T21:36:25Z", "age": 470184, "count": 18, "author": "ErichDonGubler", "url": "https://github.com/gfx-rs/wgpu/pull/5586#discussion_r1592695954", "platform": "gfx-rs/wgpu"}]}}}}], "counts": {"bmo": {"total": 0, "secure": 0, "confidential": 0}, "github": {"issues": 7, "prs": 2}}}}, "parameters": {"buildTime": "2024-05-09T05:00:01.505163-06:00", "oldestTime": "2024-05-02T05:00:01.505222"}}