{"activity": {"Sotaro": {"bmo": {"1870184": {"status": {"summary": "Black page sometimes when restoring Firefox on Android", "id": 1870184, "status": "NEW", "severity": "S3", "priority": "P3", "groups": [], "keywords": [], "type": "defect"}, "comments": {"Sotaro": [{"count": 1, "is_private": false, "text": ":jnicol, is there a similar bug already? Is there a good way to get information related to it? When I tried to get information with \"adb shell logcat\". The log did not have useful information.", "author": "sotaro.ikeda.g@gmail.com", "time": "2023-12-15T00:50:23Z", "age": 309022, "platform": "bmo"}, {"count": 2, "is_private": false, "time": "2023-12-18T09:23:43Z", "author": "jnicol@mozilla.com", "text": "I think this could be bug 1813880. Is this resolved by switching tabs, or minimizing and restoring the app? Or does the issue persist until you kill the app? I ask because unlike bug 1581868 my hunch is this isn't a graphics issue (failing to resume the compositor), but rather a more fundamental problem that gecko isn't correctly respawning a content process after it has been killed by the OS whilst in the background.\n\nIf you can reproduce again, can you try running `adb shell ps | grep mozilla`? And capture a profile?", "age": 599022, "platform": "bmo"}], "Jamie": [{"count": 2, "is_private": false, "time": "2023-12-18T09:23:43Z", "author": "jnicol@mozilla.com", "text": "I think this could be bug 1813880. Is this resolved by switching tabs, or minimizing and restoring the app? Or does the issue persist until you kill the app? I ask because unlike bug 1581868 my hunch is this isn't a graphics issue (failing to resume the compositor), but rather a more fundamental problem that gecko isn't correctly respawning a content process after it has been killed by the OS whilst in the background.\n\nIf you can reproduce again, can you try running `adb shell ps | grep mozilla`? And capture a profile?", "age": 599022, "platform": "bmo"}]}}, "1858361": {"status": {"id": 1858361, "priority": "--", "groups": [], "keywords": [], "severity": "--", "status": "RESOLVED", "type": "enhancement", "summary": "Call CanvasContext::SwapChainPresent() from ShareableCanvasRenderer::UpdateCompositableClient()"}, "comments": {"Sotaro": [{"is_private": false, "text": "Created attachment 9368105\nBug 1858361 - Call CanvasContext::SwapChainPresent() from ShareableCanvasRenderer::UpdateCompositableClient()", "author": "sotaro.ikeda.g@gmail.com", "time": "2023-12-12T08:04:49Z", "count": 3, "age": 75888, "platform": "bmo"}, {"count": 4, "is_private": false, "text": "Pushed by sikeda.birchill@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/c9c3025f1539\nCall CanvasContext::SwapChainPresent() from ShareableCanvasRenderer::UpdateCompositableClient() r=gfx-reviewers,nical", "author": "pulsebot@bmo.tld", "time": "2023-12-12T10:48:54Z", "age": 85733, "platform": "bmo"}, {"is_private": false, "text": "https://hg.mozilla.org/mozilla-central/rev/c9c3025f1539", "time": "2023-12-13T00:49:30Z", "author": "csabou@mozilla.com", "count": 5, "age": 136169, "platform": "bmo"}]}}, "1869683": {"status": {"keywords": [], "id": 1869683, "type": "defect", "status": "RESOLVED", "priority": "--", "severity": "--", "summary": "Fix remote texture handling of OffscreenCanvas WebGPU", "groups": []}, "comments": {"Sotaro": [{"count": 3, "text": "Created attachment 9368340\nBug 1869683 - Make CanvasContext::GetFrontBuffer() returns valid descriptor of remote texture", "author": "sotaro.ikeda.g@gmail.com", "is_private": false, "time": "2023-12-13T03:14:36Z", "age": 144875, "platform": "bmo"}, {"time": "2023-12-14T04:35:51Z", "text": "Pushed by sikeda.birchill@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/a200559a296e\nMake CanvasContext::GetFrontBuffer() returns valid descriptor of remote texture r=webgpu-reviewers,nical", "count": 4, "author": "pulsebot@bmo.tld", "is_private": false, "age": 236150, "platform": "bmo"}, {"author": "nerli@mozilla.com", "is_private": false, "count": 5, "text": "https://hg.mozilla.org/mozilla-central/rev/a200559a296e", "time": "2023-12-14T09:58:44Z", "age": 255523, "platform": "bmo"}]}}, "1869692": {"status": {"groups": [], "priority": "--", "id": 1869692, "summary": "https://mdn.github.io/dom-examples/webgpu-render-demo/ WebGPU is not rendered", "status": "RESOLVED", "type": "defect", "severity": "--", "keywords": ["regression"]}, "comments": {"Sotaro": [{"time": "2023-12-13T04:09:40Z", "is_private": false, "count": 2, "text": "Created attachment 9368345\nBug 1869692 - Handle a case that WebGPU rendering happens before CanvasContext::InitializeCanvasRenderer() call", "author": "sotaro.ikeda.g@gmail.com", "age": 148179, "platform": "bmo"}, {"is_private": false, "time": "2023-12-13T04:42:41Z", "count": 3, "text": "Set release status flags based on info from the regressing bug 1858361", "author": "release-mgmt-account-bot@mozilla.tld", "age": 150160, "platform": "bmo"}, {"time": "2023-12-13T11:42:06Z", "is_private": false, "count": 4, "text": "Pushed by sikeda.birchill@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/7af51753aaca\nHandle a case that WebGPU rendering happens before CanvasContext::InitializeCanvasRenderer() call r=webgpu-reviewers,nical", "author": "pulsebot@bmo.tld", "age": 175325, "platform": "bmo"}, {"text": "https://hg.mozilla.org/mozilla-central/rev/7af51753aaca", "author": "abutkovits@mozilla.com", "time": "2023-12-13T21:48:13Z", "is_private": false, "count": 5, "age": 211692, "platform": "bmo"}]}}, "1869931": {"status": {"summary": "WebGPU rendering is not synchronized to dom", "severity": "--", "status": "NEW", "type": "defect", "keywords": [], "groups": [], "priority": "--", "id": 1869931}, "comments": {"Sotaro": [{"time": "2023-12-14T01:02:15Z", "is_private": false, "author": "sotaro.ikeda.g@gmail.com", "text": "If we want the synchronization of WebGPU, there are the followings\n* [1] Use sync IPC with first rendering like WebGPU [ClientWebGLContext::GetFrontBuffer()](https://searchfox.org/mozilla-central/rev/655f49c541108e3d0a232aa7173fbcb9af88d80b/dom/canvas/ClientWebGLContext.cpp#583)\n* [2] Use wait for first rendering in RemoteTextureMap::GetRemoteTextureForDisplayList() that is going to be added by [D194352](https://phabricator.services.mozilla.com/D194352) of  Bug 1829026.\n* [3] async wait at [WebRenderAPI::HandleWrTransactionEvents()](https://searchfox.org/mozilla-central/rev/655f49c541108e3d0a232aa7173fbcb9af88d80b/gfx/webrender_bindings/WebRenderAPI.cpp#556) without sync IPC of [1]. It is going to be added at  Bug 1863257.\n\n[3] is ideal way to address the problem.", "count": 1, "age": 223334, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 5, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Jamie": {"bmo": {"1870184": {"status": {"summary": "Black page sometimes when restoring Firefox on Android", "id": 1870184, "status": "NEW", "severity": "S3", "priority": "P3", "groups": [], "keywords": [], "type": "defect"}, "comments": {"Sotaro": [{"count": 1, "is_private": false, "text": ":jnicol, is there a similar bug already? Is there a good way to get information related to it? When I tried to get information with \"adb shell logcat\". The log did not have useful information.", "author": "sotaro.ikeda.g@gmail.com", "time": "2023-12-15T00:50:23Z", "age": 309022, "platform": "bmo"}, {"count": 2, "is_private": false, "time": "2023-12-18T09:23:43Z", "author": "jnicol@mozilla.com", "text": "I think this could be bug 1813880. Is this resolved by switching tabs, or minimizing and restoring the app? Or does the issue persist until you kill the app? I ask because unlike bug 1581868 my hunch is this isn't a graphics issue (failing to resume the compositor), but rather a more fundamental problem that gecko isn't correctly respawning a content process after it has been killed by the OS whilst in the background.\n\nIf you can reproduce again, can you try running `adb shell ps | grep mozilla`? And capture a profile?", "age": 599022, "platform": "bmo"}], "Jamie": [{"count": 2, "is_private": false, "time": "2023-12-18T09:23:43Z", "author": "jnicol@mozilla.com", "text": "I think this could be bug 1813880. Is this resolved by switching tabs, or minimizing and restoring the app? Or does the issue persist until you kill the app? I ask because unlike bug 1581868 my hunch is this isn't a graphics issue (failing to resume the compositor), but rather a more fundamental problem that gecko isn't correctly respawning a content process after it has been killed by the OS whilst in the background.\n\nIf you can reproduce again, can you try running `adb shell ps | grep mozilla`? And capture a profile?", "age": 599022, "platform": "bmo"}]}}, "1869777": {"status": {"status": "RESOLVED", "summary": "GPU process gets launched on Android while app is in background if content process is killed", "id": 1869777, "keywords": [], "groups": [], "type": "defect", "severity": "--", "priority": "--"}, "comments": {"Jamie": [{"count": 1, "author": "jnicol@mozilla.com", "time": "2023-12-13T14:37:29Z", "is_private": false, "text": "Created attachment 9368420\nBug 1869777 - Avoid background process kills leading to GPU process being disabled. r?aosmond\n\n\nOn Android the OS may kill a process at any time while the app is in\nthe background. We try to avoid relaunching the GPU process in this\ncase, waiting instead until the app is foregrounded again. However, as\nthings stand if a content process is killed after the GPU process has\nbeen killed, then the GPU process will be currently be\nrelaunched. This patch avoids that occuring by preventing\nUnmapLayerTreeId() from launching a new process.\n\nAdditionally, we make it so that any GPU processes that are launched\nwhilst in the background are automatically assumed to be stable,\nmeaning they do not count towards the unstable launch count, and the\nGPU process will not be disabled due to background process kills.", "age": 185848, "platform": "bmo"}, {"author": "pulsebot@bmo.tld", "count": 2, "is_private": false, "time": "2023-12-13T17:44:24Z", "text": "Pushed by jnicol@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/951b244454e1\nAvoid background process kills leading to GPU process being disabled. r=aosmond", "age": 197063, "platform": "bmo"}, {"author": "abutkovits@mozilla.com", "count": 3, "time": "2023-12-13T21:48:33Z", "is_private": false, "text": "https://hg.mozilla.org/mozilla-central/rev/951b244454e1", "age": 211712, "platform": "bmo"}]}}, "1869569": {"status": {"id": 1869569, "summary": "Software webrender rendering glitches on Samsung S22", "status": "RESOLVED", "priority": "--", "severity": "--", "groups": [], "type": "defect", "keywords": []}, "comments": {"Jamie": [{"author": "jnicol@mozilla.com", "count": 4, "text": "Created attachment 9368654\nBug 1869569 - Avoid CompositorOGL::BeginFrame's glInvalidateFramebuffer optimization on Xclipse 920 GPU. r?#gfx-reviewers\n\n\nIn CompositorOGL (used by software webrender on Android) as an\noptimization we use glInvalidateFramebuffer rather than glClear for\nthe color attachment if there is no non-opaque invalid region. This\ncauses rendering glitches on the Samsung Xclipse 920 GPU. This patch\nmarks GLfeature::invalidate_framebuffer as unsupported on this GPU,\ncausing us to fall back to the glClear pach which avoids the glitches.\n\nOriginal Revision: https://phabricator.services.mozilla.com/D196416", "is_private": false, "time": "2023-12-14T14:31:54Z", "age": 271913, "platform": "bmo"}, {"count": 5, "author": "phab-bot@bmo.tld", "time": "2023-12-14T14:33:25Z", "is_private": false, "text": "# Uplift Approval Request\n- **Needs manual QE test**: no\n- **Steps to reproduce for manual QE testing**: N/A\n- **User impact if declined**: Rendering glitches for Samsung S22 users\n- **Explanation of risk level**: Disables an optimization that was buggy on a driver. Fallback path is well tested\n- **String changes made/needed**: None\n- **Fix verified in Nightly**: no\n- **Code covered by automated testing**: no\n- **Risk associated with taking this patch**: Low\n- **Is Android affected?**: yes", "age": 272004, "platform": "bmo"}, {"text": "https://hg.mozilla.org/releases/mozilla-release/rev/a849dbd15e6e", "time": "2023-12-14T15:55:00Z", "is_private": false, "author": "pulsebot@bmo.tld", "count": 6, "age": 276899, "platform": "bmo"}, {"is_private": false, "time": "2023-12-14T21:40:28Z", "text": "https://hg.mozilla.org/mozilla-central/rev/9094e6aea726", "author": "imoraru@mozilla.com", "count": 7, "age": 297627, "platform": "bmo"}]}}, "1870021": {"status": {"id": 1870021, "summary": "Crash parent process instead of disabling GPU process at runtime", "status": "NEW", "priority": "--", "severity": "--", "keywords": [], "type": "task", "groups": []}, "comments": {"Jamie": [{"author": "jnicol@mozilla.com", "count": 2, "time": "2023-12-14T18:19:14Z", "text": "Created attachment 9368716\nBug 1870021 - Crash parent process instead of disabling GPU process at runtime. r?aosmond,jrmuizel\n\n\nIf we reach the limit of unstable GPU process launch attempts, then\ncrash the parent process rather than disabling the GPU\nprocess. Disabling the GPU process loses the security benefits of the\nprocess, and switches users to a lesser-tested code path.\nAdditionally, crashing the parent process will give us more visibility\ninto any underlying issues via crash reports.\n\nIf a stable process has never been launched successfully, however,\nthen do allow the process to be disabled. Additionally, reset the\nunstable launch counter after a stable launch, so that we are less\neager to either disable it or crash.\n\nThis is controllable via a pref layers.gpu-process.allow-disabling.", "is_private": false, "age": 285553, "platform": "bmo"}]}}, "1869505": {"status": {"status": "RESOLVED", "id": 1869505, "summary": "Screen transition (CSS transition) performance on Puzzowl game has regressed badly in Firefox for Android", "type": "defect", "keywords": ["perf:animation", "regression"], "groups": [], "severity": "S3", "priority": "--"}, "comments": {"Jamie": [{"count": 5, "text": "Thanks. Yeah can't see anything wrong in the profile. I'm going to close as invalid, but please reopen if it reappears!", "time": "2023-12-14T12:00:07Z", "author": "jnicol@mozilla.com", "is_private": false, "age": 262806, "platform": "bmo"}]}}, "1867268": {"status": {"summary": "Form fields look corrupt", "id": 1867268, "status": "NEW", "priority": "--", "severity": "S3", "keywords": [], "type": "defect", "groups": []}, "comments": {"Jamie": [{"count": 4, "is_private": false, "time": "2023-12-12T11:58:58Z", "author": "jnicol@mozilla.com", "text": "Thank you!\n\nAs we have only heard of this affecting a single (uncommon) device, I think S3 is more appropriate.", "age": 89937, "platform": "bmo"}, {"text": "Just recieved a reply. Here it is:\nhttps://paste.mozilla.org/05Sd1f9o", "author": "selim@sum.lu", "time": "2023-12-14T13:29:42Z", "is_private": false, "count": 5, "age": 268181, "platform": "bmo"}]}}, "1869760": {"status": {"id": 1869760, "summary": "Link underlines in Google Doc are incorrectly positioned", "status": "NEW", "priority": "--", "severity": "S3", "keywords": ["regression"], "type": "defect", "groups": []}, "comments": {"Jamie": [{"text": "Setting as S3 as the regressor was backed out. Lee has it on his radar to fix before relanding.", "author": "jnicol@mozilla.com", "time": "2023-12-18T09:28:06Z", "is_private": false, "count": 14, "age": 599285, "platform": "bmo"}]}}, "1869756": {"status": {"severity": "S3", "priority": "--", "groups": [], "type": "defect", "keywords": ["regression"], "summary": "Very high memory usage in the latest Nightly/Linux", "id": 1869756, "status": "NEW"}, "comments": {"Lee": [{"text": "Is there a specific, reduced steps-to-reproduce you could give to assist in looking at this? Plus please post your about:support and memory report to help cross-reference the result?", "is_private": false, "time": "2023-12-13T11:22:02Z", "author": "lsalzman@mozilla.com", "count": 1, "age": 174121, "platform": "bmo"}, {"text": "Created attachment 9368390\naboutsupport.txt", "is_private": false, "time": "2023-12-13T11:28:45Z", "author": "smaug@mozilla.com", "count": 2, "age": 174524, "platform": "bmo"}, {"count": 3, "author": "smaug@mozilla.com", "time": "2023-12-13T11:31:09Z", "text": "unfortunately I don't have the full memory report anymore, since I had to restart.\nCurrently it looks like \n\n1,836,991,136 B (100.0%) -- gfx\n\u2514\u2500\u25001,836,991,136 B (100.0%) -- webrender\n   \u251c\u2500\u25001,818,002,080 B (98.97%) -- textures\n   \u2502  \u251c\u2500\u2500\u2500\u2500480,378,880 B (26.15%) \u2500\u2500 picture-tiles\n   \u2502  \u251c\u2500\u2500\u2500\u2500429,206,520 B (23.36%) \u2500\u2500 swap-chains\n   \u2502  \u251c\u2500\u2500\u2500\u2500411,041,792 B (22.38%) \u2500\u2500 render-targets\n   \u2502  \u251c\u2500\u2500\u2500\u2500341,419,652 B (18.59%) -- texture-cache\n   \u2502  \u2502    \u251c\u2500\u2500330,301,440 B (17.98%) \u2500\u2500 atlas\n   \u2502  \u2502    \u2514\u2500\u2500\u250011,118,212 B (00.61%) \u2500\u2500 standalone\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u250062,173,220 B (03.38%) \u2500\u2500 render-texture-hosts\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u250048,365,568 B (02.63%) \u2500\u2500 depth-targets\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u250034,603,008 B (01.88%) \u2500\u2500 texture-upload-pbos\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u25005,898,240 B (00.32%) \u2500\u2500 vertex-data\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u25004,915,200 B (00.27%) \u2500\u2500 gpu-cache\n   \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25000 B (00.00%) \u2500\u2500 upload-staging-textures\n   \u2514\u2500\u2500\u2500\u2500\u250018,989,056 B (01.03%) -- images/mapped_from_owner\n         \u251c\u2500\u250015,273,984 B (00.83%) -- pid=16794\n         \u2502  \u251c\u2500\u2500\u25004,866,048 B (00.26%) \u2500\u2500 image(900x675, compositor_ref:1, creator_ref:1)/decoded-nonheap [2]\n         \u2502  \u251c\u2500\u2500\u25002,162,688 B (00.12%) \u2500\u2500 image(900x600, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u25002,158,592 B (00.12%) \u2500\u2500 image(900x599, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u25002,101,248 B (00.11%) \u2500\u2500 image(900x583, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u25001,638,400 B (00.09%) \u2500\u2500 image(640x640, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u25001,556,480 B (00.08%) \u2500\u2500 image(1080x360, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u2500\u2500\u2500643,072 B (00.04%) \u2500\u2500 image(400x400, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u2514\u2500\u2500\u2500\u2500\u2500147,456 B (00.01%) \u2500\u2500 image(73x73, compositor_ref:1, creator_ref:1)/decoded-nonheap [6]\n         \u251c\u2500\u2500\u25002,457,600 B (00.13%) -- pid=15726\n         \u2502   \u251c\u2500\u25001,761,280 B (00.10%) \u2500\u2500 image(663x663, compositor_ref:3, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500184,320 B (00.01%) \u2500\u2500 image(24x24, compositor_ref:2, creator_ref:1)/decoded-other [45]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250077,824 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:1, creator_ref:1)/decoded-other [19]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250069,632 B (00.00%) \u2500\u2500 image(720x24, compositor_ref:12, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250069,632 B (00.00%) \u2500\u2500 image(720x24, compositor_ref:3, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250057,344 B (00.00%) \u2500\u2500 image(450x30, compositor_ref:3, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250053,248 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:16, creator_ref:1)/decoded-other [13]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250049,152 B (00.00%) \u2500\u2500 image(390x30, compositor_ref:2, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250024,576 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:3, creator_ref:1)/decoded-other [6]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250016,384 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:16, creator_ref:1)/decoded-other [4]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250016,384 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:7, creator_ref:1)/decoded-other [4]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 image(16x16, compositor_ref:2, creator_ref:1)/decoded-other [3]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:4, creator_ref:1)/decoded-other [2]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:1, creator_ref:0)/decoded-other [2]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(16x16, compositor_ref:5, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:14, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:15, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:2, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:3, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:6, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:10, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:12, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:4, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:6, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:8, creator_ref:1)/decoded-other\n         \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:9, creator_ref:1)/decoded-other\n         \u251c\u2500\u2500\u2500\u2500\u2500700,416 B (00.04%) -- pid=15830\n         \u2502     \u251c\u2500\u2500589,824 B (00.03%) \u2500\u2500 image(384x384, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u250061,440 B (00.00%) \u2500\u2500 image(123x123, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u250040,960 B (00.00%) \u2500\u2500 image(201x49, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u2514\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(32x32, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u251c\u2500\u2500\u2500\u2500\u2500319,488 B (00.02%) -- pid=16641\n         \u2502     \u251c\u2500\u2500147,456 B (00.01%) \u2500\u2500 image(35x35, compositor_ref:1, creator_ref:1)/decoded-nonheap [18]\n         \u2502     \u251c\u2500\u2500\u250061,440 B (00.00%) \u2500\u2500 image(55x55, compositor_ref:1, creator_ref:1)/decoded-nonheap [5]\n         \u2502     \u251c\u2500\u2500\u250024,576 B (00.00%) \u2500\u2500 image(27x27, compositor_ref:1, creator_ref:1)/decoded-nonheap [6]\n         \u2502     \u251c\u2500\u2500\u250024,576 B (00.00%) \u2500\u2500 image(54x54, compositor_ref:2, creator_ref:1)/decoded-nonheap [2]\n         \u2502     \u251c\u2500\u2500\u250024,576 B (00.00%) \u2500\u2500 image(54x55, compositor_ref:2, creator_ref:1)/decoded-nonheap [2]\n         \u2502     \u251c\u2500\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(27x28, compositor_ref:2, creator_ref:1)/decoded-nonheap [2]\n         \u2502     \u251c\u2500\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(44x44, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(16x16, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(22x22, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(27x27, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(28x27, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u2514\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(28x28, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u251c\u2500\u2500\u2500\u2500\u2500184,320 B (00.01%) -- pid=16225\n         \u2502     \u251c\u2500\u2500\u250086,016 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:1, creator_ref:1)/decoded-nonheap [7]\n         \u2502     \u251c\u2500\u2500\u250028,672 B (00.00%) \u2500\u2500 image(16x11, compositor_ref:1, creator_ref:1)/decoded-nonheap [7]\n         \u2502     \u251c\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:5, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:6, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(12x12, compositor_ref:4, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(16x11, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:5, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(27x27, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(30x30, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(30x30, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u2514\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(30x30, compositor_ref:4, creator_ref:1)/decoded-nonheap\n         \u251c\u2500\u2500\u2500\u2500\u2500\u250032,768 B (00.00%) -- pid=16466\n         \u2502      \u251c\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502      \u251c\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502      \u2514\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(30x30, compositor_ref:1, creator_ref:1)/decoded-nonheap [2]\n         \u251c\u2500\u2500\u2500\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 pid=16454/image(48x48, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 pid=15935/image(32x32, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 pid=16290/image(1x198, compositor_ref:1, creator_ref:1)/decoded-nonheap", "is_private": false, "age": 174668, "platform": "bmo"}, {"is_private": false, "text": "Olli, just want to confirm you haven't seen this since bug 1829026 was backed out?", "time": "2023-12-18T09:30:23Z", "count": 4, "author": "jnicol@mozilla.com", "age": 599422, "platform": "bmo"}, {"author": "smaug@mozilla.com", "count": 5, "text": "That is true", "is_private": false, "time": "2023-12-18T10:21:28Z", "age": 602487, "platform": "bmo"}, {"count": 6, "author": "jnicol@mozilla.com", "text": "Great, thanks.", "time": "2023-12-18T10:22:45Z", "is_private": false, "age": 602564, "platform": "bmo"}], "Jamie": [{"count": 6, "author": "jnicol@mozilla.com", "text": "Great, thanks.", "time": "2023-12-18T10:22:45Z", "is_private": false, "age": 602564, "platform": "bmo"}]}}, "1870413": {"status": {"summary": "Crash in [@ webrender::renderer::shade::LazilyCompiledShader::new] with shader \"cs_scale\" with features \"TEXTURE_EXTERNAL_BT709\" not in available shader list", "id": 1870413, "status": "ASSIGNED", "priority": "--", "severity": "--", "keywords": ["crash", "regression"], "type": "defect", "groups": []}, "comments": {"Jamie": [{"count": 6, "text": "Created attachment 9369178\nBug 1870413 - Allow creating TEXTURE_EXTERNAL_BT709 shaders on devices without image_external_essl3. r?#gfx-reviewers\n\n\nAn oversight when updating the allowed shaders list in bug 1866020\nassumed that devices without GL_OES_EGL_image_external_essl3 would\nalso not have GL_EXT_YUV_target. This turns out not to always be the\ncase, and results in a crash when attempting to initialize the shaders\non such devices.\n\nThis patch checks explicitly for GL_EXT_YUV_target when generating the\nallowed shaders list.", "author": "jnicol@mozilla.com", "time": "2023-12-18T10:53:21Z", "is_private": false, "age": 604400, "platform": "bmo"}]}}, "1869288": {"status": {"status": "NEW", "id": 1869288, "keywords": ["regression"], "summary": "Testcase from bug  1770108 doesnt draw anything, hangs the driver, or turns the browser unresponsive", "priority": "--", "type": "defect", "groups": [], "severity": "S3"}, "comments": {"Jamie": [{"count": 5, "is_private": false, "text": "Thanks for the clarification. gpu-canvas is off by default on windows, and I cannot repro on Linux or Macos, so I'm setting as S3 for now. Lee can re-evaluate if needs be.", "time": "2023-12-18T11:05:53Z", "author": "jnicol@mozilla.com", "age": 605152, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 10, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Brad": {"bmo": {"1870181": {"status": {"severity": "S3", "priority": "P3", "type": "defect", "keywords": ["crash"], "groups": [], "summary": "Crash in [@ igd10iumd64.dll | CContext::TID3D11DeviceContext_OMSetBlendState_<T>]", "id": 1870181, "status": "NEW"}, "comments": {"Brad": [{"time": "2023-12-15T21:45:42Z", "count": 2, "text": "Looks like `dxBlendState->get()` is resolving to a near-NULL value. Kelsey, do you have any insight into this?", "author": "bwerth@mozilla.com", "is_private": false, "age": 384341, "platform": "bmo"}]}}, "1839425": {"status": {"priority": "P3", "severity": "S3", "type": "defect", "groups": [], "keywords": ["regression"], "id": 1839425, "summary": "[macOS] video isn't shown during transition to full screen", "status": "NEW"}, "comments": {"Brad": [{"author": "bwerth@mozilla.com", "count": 30, "is_private": false, "time": "2023-12-13T00:43:10Z", "text": "Comment on attachment 9340809\nBug 1839425: Stop showing layout changes during macOS native fullscreen transitions.\n\nDo you think this is landable as-is, or do we need to go the extra step of figuring out a resizing visual transition?", "age": 135789, "platform": "bmo"}]}}, "1870393": {"status": {"severity": "S3", "groups": [], "type": "defect", "keywords": ["crash"], "id": 1870393, "summary": "Crash in [@ mozilla::gfx::CriticalLogger::CrashAction] from RecordedTextureLock::PlayCanvasEvent", "priority": "P3", "status": "NEW"}, "comments": {"Brad": [{"is_private": false, "author": "bwerth@mozilla.com", "text": "Lee, are you the knowledgeable person on `RecordedTextureLock::PlayCanvasEvent`? If not, we'll figure it out in triage.", "count": 1, "time": "2023-12-15T21:35:23Z", "age": 383722, "platform": "bmo"}, {"time": "2023-12-16T06:22:46Z", "text": "(In reply to Brad Werth [:bradwerth] from comment #1)\n> Lee, are you the knowledgeable person on `RecordedTextureLock::PlayCanvasEvent`? If not, we'll figure it out in triage.\n\nThis looks like something Bob Owen is the one to investigate.", "count": 2, "is_private": false, "author": "lsalzman@mozilla.com", "age": 415365, "platform": "bmo"}, {"is_private": false, "author": "lsalzman@mozilla.com", "count": 3, "text": "CrashReport seems to say AcquireSync is returning WAIT_TIMEOUT, leading ultimately to: gfxDevCrash(LogReason::D3DLockTimeout) << \"D3D lock mutex timeout - device not removed\";\n\nSmells something like a device reset.  But maybe something else is just holding the lock for a really really long time?", "time": "2023-12-16T06:32:33Z", "age": 415952, "platform": "bmo"}], "Lee": [{"is_private": false, "author": "lsalzman@mozilla.com", "count": 3, "text": "CrashReport seems to say AcquireSync is returning WAIT_TIMEOUT, leading ultimately to: gfxDevCrash(LogReason::D3DLockTimeout) << \"D3D lock mutex timeout - device not removed\";\n\nSmells something like a device reset.  But maybe something else is just holding the lock for a really really long time?", "time": "2023-12-16T06:32:33Z", "age": 415952, "platform": "bmo"}]}}, "0000000": {"status": {"severity": "---", "keywords": ["crash", "csectype-uaf", "sec-high", "sec-vector"], "status": "REOPENED", "priority": "---", "summary": "[summary redacted]", "type": "defect", "groups": ["core-security-release"], "id": "0000000", "time": "---", "age": 0}, "comments": {"Brad": [{"is_private": false, "text": "[comment redacted]", "author": "---", "time": "---", "count": 39, "age": 0, "platform": "bmo"}, {"is_private": false, "time": "---", "author": "---", "text": "[comment redacted]", "count": 40, "age": 0, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 4, "secure": 1, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Lee": {"bmo": {"1869756": {"status": {"severity": "S3", "priority": "--", "groups": [], "type": "defect", "keywords": ["regression"], "summary": "Very high memory usage in the latest Nightly/Linux", "id": 1869756, "status": "NEW"}, "comments": {"Lee": [{"text": "Is there a specific, reduced steps-to-reproduce you could give to assist in looking at this? Plus please post your about:support and memory report to help cross-reference the result?", "is_private": false, "time": "2023-12-13T11:22:02Z", "author": "lsalzman@mozilla.com", "count": 1, "age": 174121, "platform": "bmo"}, {"text": "Created attachment 9368390\naboutsupport.txt", "is_private": false, "time": "2023-12-13T11:28:45Z", "author": "smaug@mozilla.com", "count": 2, "age": 174524, "platform": "bmo"}, {"count": 3, "author": "smaug@mozilla.com", "time": "2023-12-13T11:31:09Z", "text": "unfortunately I don't have the full memory report anymore, since I had to restart.\nCurrently it looks like \n\n1,836,991,136 B (100.0%) -- gfx\n\u2514\u2500\u25001,836,991,136 B (100.0%) -- webrender\n   \u251c\u2500\u25001,818,002,080 B (98.97%) -- textures\n   \u2502  \u251c\u2500\u2500\u2500\u2500480,378,880 B (26.15%) \u2500\u2500 picture-tiles\n   \u2502  \u251c\u2500\u2500\u2500\u2500429,206,520 B (23.36%) \u2500\u2500 swap-chains\n   \u2502  \u251c\u2500\u2500\u2500\u2500411,041,792 B (22.38%) \u2500\u2500 render-targets\n   \u2502  \u251c\u2500\u2500\u2500\u2500341,419,652 B (18.59%) -- texture-cache\n   \u2502  \u2502    \u251c\u2500\u2500330,301,440 B (17.98%) \u2500\u2500 atlas\n   \u2502  \u2502    \u2514\u2500\u2500\u250011,118,212 B (00.61%) \u2500\u2500 standalone\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u250062,173,220 B (03.38%) \u2500\u2500 render-texture-hosts\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u250048,365,568 B (02.63%) \u2500\u2500 depth-targets\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u250034,603,008 B (01.88%) \u2500\u2500 texture-upload-pbos\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u25005,898,240 B (00.32%) \u2500\u2500 vertex-data\n   \u2502  \u251c\u2500\u2500\u2500\u2500\u2500\u25004,915,200 B (00.27%) \u2500\u2500 gpu-cache\n   \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25000 B (00.00%) \u2500\u2500 upload-staging-textures\n   \u2514\u2500\u2500\u2500\u2500\u250018,989,056 B (01.03%) -- images/mapped_from_owner\n         \u251c\u2500\u250015,273,984 B (00.83%) -- pid=16794\n         \u2502  \u251c\u2500\u2500\u25004,866,048 B (00.26%) \u2500\u2500 image(900x675, compositor_ref:1, creator_ref:1)/decoded-nonheap [2]\n         \u2502  \u251c\u2500\u2500\u25002,162,688 B (00.12%) \u2500\u2500 image(900x600, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u25002,158,592 B (00.12%) \u2500\u2500 image(900x599, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u25002,101,248 B (00.11%) \u2500\u2500 image(900x583, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u25001,638,400 B (00.09%) \u2500\u2500 image(640x640, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u25001,556,480 B (00.08%) \u2500\u2500 image(1080x360, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u251c\u2500\u2500\u2500\u2500\u2500643,072 B (00.04%) \u2500\u2500 image(400x400, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502  \u2514\u2500\u2500\u2500\u2500\u2500147,456 B (00.01%) \u2500\u2500 image(73x73, compositor_ref:1, creator_ref:1)/decoded-nonheap [6]\n         \u251c\u2500\u2500\u25002,457,600 B (00.13%) -- pid=15726\n         \u2502   \u251c\u2500\u25001,761,280 B (00.10%) \u2500\u2500 image(663x663, compositor_ref:3, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500184,320 B (00.01%) \u2500\u2500 image(24x24, compositor_ref:2, creator_ref:1)/decoded-other [45]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250077,824 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:1, creator_ref:1)/decoded-other [19]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250069,632 B (00.00%) \u2500\u2500 image(720x24, compositor_ref:12, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250069,632 B (00.00%) \u2500\u2500 image(720x24, compositor_ref:3, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250057,344 B (00.00%) \u2500\u2500 image(450x30, compositor_ref:3, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250053,248 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:16, creator_ref:1)/decoded-other [13]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250049,152 B (00.00%) \u2500\u2500 image(390x30, compositor_ref:2, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250024,576 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:3, creator_ref:1)/decoded-other [6]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250016,384 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:16, creator_ref:1)/decoded-other [4]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250016,384 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:7, creator_ref:1)/decoded-other [4]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 image(16x16, compositor_ref:2, creator_ref:1)/decoded-other [3]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:4, creator_ref:1)/decoded-other [2]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:1, creator_ref:0)/decoded-other [2]\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(16x16, compositor_ref:5, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:14, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:15, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:2, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:3, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(18x18, compositor_ref:6, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:10, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:12, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:4, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:6, creator_ref:1)/decoded-other\n         \u2502   \u251c\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:8, creator_ref:1)/decoded-other\n         \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:9, creator_ref:1)/decoded-other\n         \u251c\u2500\u2500\u2500\u2500\u2500700,416 B (00.04%) -- pid=15830\n         \u2502     \u251c\u2500\u2500589,824 B (00.03%) \u2500\u2500 image(384x384, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u250061,440 B (00.00%) \u2500\u2500 image(123x123, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u250040,960 B (00.00%) \u2500\u2500 image(201x49, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u2514\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(32x32, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u251c\u2500\u2500\u2500\u2500\u2500319,488 B (00.02%) -- pid=16641\n         \u2502     \u251c\u2500\u2500147,456 B (00.01%) \u2500\u2500 image(35x35, compositor_ref:1, creator_ref:1)/decoded-nonheap [18]\n         \u2502     \u251c\u2500\u2500\u250061,440 B (00.00%) \u2500\u2500 image(55x55, compositor_ref:1, creator_ref:1)/decoded-nonheap [5]\n         \u2502     \u251c\u2500\u2500\u250024,576 B (00.00%) \u2500\u2500 image(27x27, compositor_ref:1, creator_ref:1)/decoded-nonheap [6]\n         \u2502     \u251c\u2500\u2500\u250024,576 B (00.00%) \u2500\u2500 image(54x54, compositor_ref:2, creator_ref:1)/decoded-nonheap [2]\n         \u2502     \u251c\u2500\u2500\u250024,576 B (00.00%) \u2500\u2500 image(54x55, compositor_ref:2, creator_ref:1)/decoded-nonheap [2]\n         \u2502     \u251c\u2500\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(27x28, compositor_ref:2, creator_ref:1)/decoded-nonheap [2]\n         \u2502     \u251c\u2500\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(44x44, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(16x16, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(22x22, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(27x27, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(28x27, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u2514\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(28x28, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u251c\u2500\u2500\u2500\u2500\u2500184,320 B (00.01%) -- pid=16225\n         \u2502     \u251c\u2500\u2500\u250086,016 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:1, creator_ref:1)/decoded-nonheap [7]\n         \u2502     \u251c\u2500\u2500\u250028,672 B (00.00%) \u2500\u2500 image(16x11, compositor_ref:1, creator_ref:1)/decoded-nonheap [7]\n         \u2502     \u251c\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:5, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:6, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(12x12, compositor_ref:4, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(16x11, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(24x24, compositor_ref:5, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(27x27, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(30x30, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502     \u251c\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(30x30, compositor_ref:3, creator_ref:1)/decoded-nonheap\n         \u2502     \u2514\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 image(30x30, compositor_ref:4, creator_ref:1)/decoded-nonheap\n         \u251c\u2500\u2500\u2500\u2500\u2500\u250032,768 B (00.00%) -- pid=16466\n         \u2502      \u251c\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2502      \u251c\u2500\u250012,288 B (00.00%) \u2500\u2500 image(48x48, compositor_ref:2, creator_ref:1)/decoded-nonheap\n         \u2502      \u2514\u2500\u2500\u25008,192 B (00.00%) \u2500\u2500 image(30x30, compositor_ref:1, creator_ref:1)/decoded-nonheap [2]\n         \u251c\u2500\u2500\u2500\u2500\u2500\u250012,288 B (00.00%) \u2500\u2500 pid=16454/image(48x48, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 pid=15935/image(32x32, compositor_ref:1, creator_ref:1)/decoded-nonheap\n         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25004,096 B (00.00%) \u2500\u2500 pid=16290/image(1x198, compositor_ref:1, creator_ref:1)/decoded-nonheap", "is_private": false, "age": 174668, "platform": "bmo"}, {"is_private": false, "text": "Olli, just want to confirm you haven't seen this since bug 1829026 was backed out?", "time": "2023-12-18T09:30:23Z", "count": 4, "author": "jnicol@mozilla.com", "age": 599422, "platform": "bmo"}, {"author": "smaug@mozilla.com", "count": 5, "text": "That is true", "is_private": false, "time": "2023-12-18T10:21:28Z", "age": 602487, "platform": "bmo"}, {"count": 6, "author": "jnicol@mozilla.com", "text": "Great, thanks.", "time": "2023-12-18T10:22:45Z", "is_private": false, "age": 602564, "platform": "bmo"}], "Jamie": [{"count": 6, "author": "jnicol@mozilla.com", "text": "Great, thanks.", "time": "2023-12-18T10:22:45Z", "is_private": false, "age": 602564, "platform": "bmo"}]}}, "1709600": {"status": {"groups": [], "type": "defect", "keywords": [], "severity": "S3", "priority": "--", "status": "NEW", "id": 1709600, "summary": "Timeouts in mozilla::layers::LockD3DTexture<T>"}, "comments": {"Lee": [{"text": "Seems like the vast majority of these crashes happen on Windows 11. Over past 6 months, 80.78% of these crashes occur on Windows 11. I wonder if the trend line follows the creeping up in our Windows 11 user-base, though it's hard to see from the existing gfx telemetry we have. As Timothy points out, could be related to an increase users of newer hardware or drivers that might track with that stat as well, so could be red herring.", "author": "lsalzman@mozilla.com", "time": "2023-12-16T06:49:55Z", "is_private": false, "count": 26, "age": 416994, "platform": "bmo"}, {"time": "2023-12-17T19:51:07Z", "is_private": false, "count": 27, "text": "I'm not sure what could be causing these, what Lee has mentioned sounds like a plausible explanation though. Perhaps a deeper dive in to the telemetry might provide some correlations with hardware / driver version?", "author": "gwatson@mozilla.com", "age": 550266, "platform": "bmo"}, {"is_private": false, "time": "2023-12-18T04:38:42Z", "count": 28, "text": "(In reply to Lee Salzman [:lsalzman] from comment #26)\n> Seems like the vast majority of these crashes happen on Windows 11.\n\nI'm guessing that's mostly a result of this primarily occurring on the last few generations of Intel integrated graphics, rather than being caused by the OS version.  (I say this as someone who experiences it on Windows 10.)", "author": "1justinpeter@gmail.com", "age": 581921, "platform": "bmo"}], "Glenn": [{"time": "2023-12-17T19:51:07Z", "is_private": false, "count": 27, "text": "I'm not sure what could be causing these, what Lee has mentioned sounds like a plausible explanation though. Perhaps a deeper dive in to the telemetry might provide some correlations with hardware / driver version?", "author": "gwatson@mozilla.com", "age": 550266, "platform": "bmo"}, {"is_private": false, "time": "2023-12-18T04:38:42Z", "count": 28, "text": "(In reply to Lee Salzman [:lsalzman] from comment #26)\n> Seems like the vast majority of these crashes happen on Windows 11.\n\nI'm guessing that's mostly a result of this primarily occurring on the last few generations of Intel integrated graphics, rather than being caused by the OS version.  (I say this as someone who experiences it on Windows 10.)", "author": "1justinpeter@gmail.com", "age": 581921, "platform": "bmo"}]}}, "1764300": {"status": {"id": 1764300, "summary": "Intermittent Assertion failure: mRenderTextures.find(aExternalImageId) != mRenderTextures.end(), at /builds/worker/checkouts/gecko/gfx/webrender_bindings/RenderThread.cpp:805", "status": "RESOLVED", "severity": "S4", "priority": "--", "groups": [], "keywords": ["assertion", "intermittent-failure"], "type": "defect"}, "comments": {"Lee": [{"time": "2023-12-12T07:40:26Z", "is_private": false, "count": 40, "text": "Created attachment 9368102\nBug 1764300 - Don't assert when unregistering render textures during shutdown. r?aosmond\n\n\nThe one reason a surface can be in the SharedSurfacesParent table and not registerd is\nbecause it was registered during shutdown. In this case, we shouldn't be asserting anyway\nif something just tries to unregister it thereafter.", "author": "lsalzman@mozilla.com", "age": 74425, "platform": "bmo"}, {"count": 41, "is_private": false, "time": "2023-12-12T07:58:29Z", "author": "pulsebot@bmo.tld", "text": "Pushed by lsalzman@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/a6bcba4badc2\nDon't assert when unregistering render textures during shutdown. r=sotaro", "age": 75508, "platform": "bmo"}, {"count": 42, "time": "2023-12-13T00:49:03Z", "is_private": false, "author": "csabou@mozilla.com", "text": "https://hg.mozilla.org/mozilla-central/rev/a6bcba4badc2", "age": 136142, "platform": "bmo"}, {"is_private": false, "time": "2023-12-13T06:00:08Z", "count": 43, "text": "36 failures in 846 pushes (0.043 failures/push) were associated with this bug yesterday.\n\nRepository breakdown:\n* autoland: 12\n* mozilla-central: 11\n* try: 13\n\nPlatform and build breakdown:\n* windows11-64-2009-qr: 24\n  * debug: 24\n* windows11-32-2009-qr: 12\n  * debug: 12\n\nFor more details, see:\nhttps://treeherder.mozilla.org/intermittent-failures/bugdetails?bug=1764300&startday=2023-12-12&endday=2023-12-12&tree=all", "author": "orangefactor@bots.tld", "age": 154807, "platform": "bmo"}, {"author": "orangefactor@bots.tld", "text": "39 failures in 4224 pushes (0.009 failures/push) were associated with this bug in the last 7 days.\n\nThis is the #22 most frequent failure this week.\n\n** This failure happened more than 30 times this week! Resolving this bug is a high priority. **\n\n** Try to resolve this bug as soon as possible. If unresolved for 2 weeks, the affected test(s) may be disabled. ** \n\nRepository breakdown:\n* autoland: 15\n* mozilla-central: 11\n* try: 13\n\nPlatform and build breakdown:\n* windows11-32-2009-qr: 12\n  * debug: 12\n* windows11-64-2009-qr: 27\n  * debug: 27\n\nFor more details, see:\nhttps://treeherder.mozilla.org/intermittent-failures/bugdetails?bug=1764300&startday=2023-12-11&endday=2023-12-17&tree=all", "count": 44, "is_private": false, "time": "2023-12-18T06:29:47Z", "age": 588586, "platform": "bmo"}]}}, "1870393": {"status": {"severity": "S3", "groups": [], "type": "defect", "keywords": ["crash"], "id": 1870393, "summary": "Crash in [@ mozilla::gfx::CriticalLogger::CrashAction] from RecordedTextureLock::PlayCanvasEvent", "priority": "P3", "status": "NEW"}, "comments": {"Brad": [{"is_private": false, "author": "bwerth@mozilla.com", "text": "Lee, are you the knowledgeable person on `RecordedTextureLock::PlayCanvasEvent`? If not, we'll figure it out in triage.", "count": 1, "time": "2023-12-15T21:35:23Z", "age": 383722, "platform": "bmo"}, {"time": "2023-12-16T06:22:46Z", "text": "(In reply to Brad Werth [:bradwerth] from comment #1)\n> Lee, are you the knowledgeable person on `RecordedTextureLock::PlayCanvasEvent`? If not, we'll figure it out in triage.\n\nThis looks like something Bob Owen is the one to investigate.", "count": 2, "is_private": false, "author": "lsalzman@mozilla.com", "age": 415365, "platform": "bmo"}, {"is_private": false, "author": "lsalzman@mozilla.com", "count": 3, "text": "CrashReport seems to say AcquireSync is returning WAIT_TIMEOUT, leading ultimately to: gfxDevCrash(LogReason::D3DLockTimeout) << \"D3D lock mutex timeout - device not removed\";\n\nSmells something like a device reset.  But maybe something else is just holding the lock for a really really long time?", "time": "2023-12-16T06:32:33Z", "age": 415952, "platform": "bmo"}], "Lee": [{"is_private": false, "author": "lsalzman@mozilla.com", "count": 3, "text": "CrashReport seems to say AcquireSync is returning WAIT_TIMEOUT, leading ultimately to: gfxDevCrash(LogReason::D3DLockTimeout) << \"D3D lock mutex timeout - device not removed\";\n\nSmells something like a device reset.  But maybe something else is just holding the lock for a really really long time?", "time": "2023-12-16T06:32:33Z", "age": 415952, "platform": "bmo"}]}}, "1860546": {"status": {"status": "NEW", "priority": "--", "summary": "Artifact when filling and compositing some shapes with non-integer positions/dimensions", "id": 1860546, "keywords": [], "type": "defect", "groups": [], "severity": "S3"}, "comments": {"Lee": [{"time": "2023-12-18T06:27:40Z", "author": "lsalzman@mozilla.com", "text": "Can verify that this bug repros without any form of acceleration, and that it also repros in Chromium, which means it is a pre-existing Skia bug. I am guessing this is something to do with anti-aliasing blending over the anti-aliasing, and that it's not completely opaque. This exists with many other blend modes, not just \"color\", and honestly, the way the operation is specified, I *thiiink* this is actually the expected behavior if you draw a non-pixel-aligned rectangle like this with blending?", "is_private": false, "count": 4, "age": 588459, "platform": "bmo"}, {"text": "The linked issue is https://github.com/mozilla/pdf.js/issues/17144. The issue cause in drawing Cancas2D. I thought if the issue can be fixed in Pdfjs to draw the \"blue mask\" in the link text. Because the issue not happened if the pdf is opened with Pdf reader or opened directly in Chrome browser. I wonder if the round(x/y) function can be fixed or not when drawing?", "time": "2023-12-18T06:47:46Z", "author": "phoucdang@gmail.com", "is_private": false, "count": 5, "age": 589665, "platform": "bmo"}]}}, "1829026": {"status": {"keywords": ["perf-alert"], "id": 1829026, "summary": "Investigate off-main-thread canvas for DrawTargetWebGL", "priority": "--", "status": "REOPENED", "groups": [], "type": "enhancement", "severity": "S3"}, "comments": {"Lee": [{"is_private": false, "text": "Created attachment 9368269\nBug 1829026 - Increase fuzz. r?aosmond", "author": "lsalzman@mozilla.com", "time": "2023-12-12T19:40:19Z", "count": 18, "age": 117618, "platform": "bmo"}, {"is_private": false, "text": "Pushed by lsalzman@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/ebc60855035e\nIncrease fuzz. r=aosmond", "author": "pulsebot@bmo.tld", "time": "2023-12-13T00:43:17Z", "count": 19, "age": 135796, "platform": "bmo"}, {"count": 20, "time": "2023-12-13T00:49:13Z", "author": "csabou@mozilla.com", "text": "https://hg.mozilla.org/mozilla-central/rev/9d9b3a68858c\nhttps://hg.mozilla.org/mozilla-central/rev/3ba040642ddc\nhttps://hg.mozilla.org/mozilla-central/rev/974c08a3791b\nhttps://hg.mozilla.org/mozilla-central/rev/330a6732fc0b\nhttps://hg.mozilla.org/mozilla-central/rev/13c9bf69085f\nhttps://hg.mozilla.org/mozilla-central/rev/31935f164ef0\nhttps://hg.mozilla.org/mozilla-central/rev/674b60ba54b1\nhttps://hg.mozilla.org/mozilla-central/rev/19d28d8f75a4\nhttps://hg.mozilla.org/mozilla-central/rev/77da89c7dab7\nhttps://hg.mozilla.org/mozilla-central/rev/4c619422efe5", "is_private": false, "age": 136152, "platform": "bmo"}, {"count": 21, "is_private": false, "text": "https://hg.mozilla.org/mozilla-central/rev/ebc60855035e", "author": "nbeleuzu@mozilla.com", "time": "2023-12-13T09:29:10Z", "age": 167349, "platform": "bmo"}, {"text": "Backout by sstanca@mozilla.com:\nhttps://hg.mozilla.org/mozilla-central/rev/7b5df397384d\nBacked out changeset ebc60855035e as requested for causing Bug 1869760 and Bug 1869738. a=backout", "author": "pulsebot@bmo.tld", "time": "2023-12-13T14:54:53Z", "is_private": false, "count": 22, "age": 186892, "platform": "bmo"}, {"count": 23, "is_private": false, "author": "dmeehan@mozilla.com", "time": "2023-12-13T16:55:20Z", "text": "Setting back to resolved since not all patches were backed out", "age": 194119, "platform": "bmo"}, {"count": 24, "is_private": false, "text": "Backout by archaeopteryx@coole-files.de:\nhttps://hg.mozilla.org/mozilla-central/rev/c1408b78600b\nBacked out 10 changesets for causing bug 1869760 and bug 1869738. a=backout", "time": "2023-12-13T18:36:22Z", "author": "pulsebot@bmo.tld", "age": 200181, "platform": "bmo"}, {"count": 25, "text": "All patches have been backed out. The FX122 soft code freeze starts tomorrow (2023-12-14). Please hold in landing again until after merge day on 2023-12-18.", "time": "2023-12-13T18:47:41Z", "author": "dmeehan@mozilla.com", "is_private": false, "age": 200860, "platform": "bmo"}, {"count": 26, "author": "aglavic@mozilla.com", "time": "2023-12-15T14:46:40Z", "text": "Your patch resulted in a performance improvement! :)\n== Change summary for alert #40662 (as of Thu, 14 Dec 2023 04:10:10 GMT) ==\n### Improvements:\n\n| **Ratio** | **Test** | **Platform** | **Options** | **Absolute values (old vs new)** |  \n|--|--|--|--|--| \n| [11%](https://treeherder.mozilla.org/perfherder/graphs?timerange=1209600&series=autoland,4774762,1,1)  | [pdfpaint](https://firefox-source-docs.mozilla.org/testing/perfdocs/talos.html#pdfpaint)  | macosx1015-64-shippable-qr | e10s fission stylo webrender | 541.67 -> 483.41 | \n\nFor up to date results, see: https://treeherder.mozilla.org/perfherder/alerts?id=40662(In reply to Cosmin Sabou [:CosminS] from comment #20)\n> https://hg.mozilla.org/mozilla-central/rev/9d9b3a68858c\n> https://hg.mozilla.org/mozilla-central/rev/3ba040642ddc\n> https://hg.mozilla.org/mozilla-central/rev/974c08a3791b\n> https://hg.mozilla.org/mozilla-central/rev/330a6732fc0b\n> https://hg.mozilla.org/mozilla-central/rev/13c9bf69085f\n> https://hg.mozilla.org/mozilla-central/rev/31935f164ef0\n> https://hg.mozilla.org/mozilla-central/rev/674b60ba54b1\n> https://hg.mozilla.org/mozilla-central/rev/19d28d8f75a4\n> https://hg.mozilla.org/mozilla-central/rev/77da89c7dab7\n> https://hg.mozilla.org/mozilla-central/rev/4c619422efe5", "is_private": false, "age": 359199, "platform": "bmo"}, {"author": "afinder@mozilla.com", "time": "2023-12-18T09:52:34Z", "text": "(In reply to Pulsebot from comment #13)\n> Pushed by lsalzman@mozilla.com:\n> https://hg.mozilla.org/integration/autoland/rev/9d9b3a68858c\n> Remove unused ClientWebGLContext local extensions. r=jgilbert,aosmond\n> https://hg.mozilla.org/integration/autoland/rev/3ba040642ddc\n> Allow WebGLContext to work without a host or client wrapper.\n> r=jgilbert,aosmond\n> https://hg.mozilla.org/integration/autoland/rev/974c08a3791b\n> Allow WebGLContext::PushRemoteTexture to specify an explicit pid. r=aosmond\n> https://hg.mozilla.org/integration/autoland/rev/330a6732fc0b\n> Allow invalidating the current TLS context on establishing TLS scope.\n> r=aosmond\n> https://hg.mozilla.org/integration/autoland/rev/13c9bf69085f\n> Support using DrawTargetWebgl via remote canvas. r=aosmond\n> https://hg.mozilla.org/integration/autoland/rev/31935f164ef0\n> Update CanvasTranslator to work with DrawTargetWebgl. r=aosmond\n> https://hg.mozilla.org/integration/autoland/rev/674b60ba54b1\n> Optimize circle drawing in DrawTargetWebgl. r=aosmond\n> https://hg.mozilla.org/integration/autoland/rev/19d28d8f75a4\n> Implement DrawShadow in DrawTargetRecording. r=aosmond\n> https://hg.mozilla.org/integration/autoland/rev/77da89c7dab7\n> Handle KERN_ABORTED from semaphore_wait. r=aosmond\n\n== Change summary for alert #40692 (as of Mon, 18 Dec 2023 07:49:33 GMT) ==\n### Improvements:\n\n| **Ratio** | **Test** | **Platform** | **Options** | **Absolute values (old vs new)** |  **Performance Profiles** | \n|--|--|--|--|--|--| \n| [7%](https://treeherder.mozilla.org/perfherder/graphs?timerange=1209600&series=autoland,4590859,1,13)  | [speedometer3](https://firefox-source-docs.mozilla.org/testing/perfdocs/raptor.html#speedometer3-m)  | android-hw-a51-11-0-aarch64-shippable-qr | webrender | 2.62 -> 2.81 |  |\n| [5%](https://treeherder.mozilla.org/perfherder/graphs?timerange=1209600&series=autoland,4588356,1,13)  | [speedometer3](https://firefox-source-docs.mozilla.org/testing/perfdocs/raptor.html#speedometer3-d)  | linux1804-64-shippable-qr | fission webrender | 8.89 -> 9.31 | [Before](https://profiler.firefox.com/from-url/https%3A%2F%2Ffirefox-ci-tc.services.mozilla.com%2Fapi%2Fqueue%2Fv1%2Ftask%2FFYmdjDz6Rh-KvQGamtuS6w%2Fruns%2F0%2Fartifacts%2Fpublic%2Ftest_info%2Fprofile_speedometer3.zip)/[After](https://profiler.firefox.com/from-url/https%3A%2F%2Ffirefox-ci-tc.services.mozilla.com%2Fapi%2Fqueue%2Fv1%2Ftask%2FeViUEBR5TH-8i8k74anzsw%2Fruns%2F0%2Fartifacts%2Fpublic%2Ftest_info%2Fprofile_speedometer3.zip) |\n| [4%](https://treeherder.mozilla.org/perfherder/graphs?timerange=1209600&series=autoland,3779443,1,13)  | [google-docs](https://firefox-source-docs.mozilla.org/testing/perfdocs/raptor.html#google-docs-d) loadtime | macosx1015-64-shippable-qr | cold fission webrender | 796.13 -> 762.16 |  |\n| [4%](https://treeherder.mozilla.org/perfherder/graphs?timerange=1209600&series=autoland,4864567,1,13)  | [speedometer3](https://firefox-source-docs.mozilla.org/testing/perfdocs/raptor.html#speedometer3-d)  | macosx1300-64-shippable-qr | fission webrender | 29.04 -> 30.19 |  |\n| [4%](https://treeherder.mozilla.org/perfherder/graphs?timerange=1209600&series=autoland,4721628,1,13)  | [speedometer3](https://firefox-source-docs.mozilla.org/testing/perfdocs/raptor.html#speedometer3-d)  | macosx1015-64-nightlyasrelease-qr | fission webrender | 11.87 -> 12.34 |  |\n| [1%](https://treeherder.mozilla.org/perfherder/graphs?timerange=1209600&series=autoland,4722823,1,13)  | [speedometer3](https://firefox-source-docs.mozilla.org/testing/perfdocs/raptor.html#speedometer3-d)  | windows10-64-nightlyasrelease-qr | fission webrender | 12.21 -> 12.36 | [Before](https://profiler.firefox.com/from-url/https%3A%2F%2Ffirefox-ci-tc.services.mozilla.com%2Fapi%2Fqueue%2Fv1%2Ftask%2FZ-2Xo03lT4GSpEYve1a7rw%2Fruns%2F0%2Fartifacts%2Fpublic%2Ftest_info%2Fprofile_speedometer3.zip)/[After](https://profiler.firefox.com/from-url/https%3A%2F%2Ffirefox-ci-tc.services.mozilla.com%2Fapi%2Fqueue%2Fv1%2Ftask%2FJfAgCh1cQmy0qP6zN4toyQ%2Fruns%2F0%2Fartifacts%2Fpublic%2Ftest_info%2Fprofile_speedometer3.zip) |\n\nFor up to date results, see: https://treeherder.mozilla.org/perfherder/alerts?id=40692", "is_private": false, "count": 27, "age": 600753, "platform": "bmo"}]}}, "1869713": {"status": {"status": "RESOLVED", "id": 1869713, "keywords": ["regression"], "summary": "[gpu-canvas] crash on any canvas webpage (MakeCurrent called on a thread other than the creating thread)", "priority": "--", "groups": [], "type": "defect", "severity": "S4"}, "comments": {"Lee": [{"is_private": false, "time": "2023-12-13T08:52:05Z", "text": "This is not really supported or tested on Windows at all yet. Caveat emptor if you decide to enable it on Windows. But this is disabled by default.", "count": 6, "author": "lsalzman@mozilla.com", "age": 165124, "platform": "bmo"}, {"is_private": false, "time": "2023-12-13T08:55:00Z", "text": "(In reply to Lee Salzman [:lsalzman] from comment #6)\n> This is not really supported or tested on Windows at all yet. Caveat emptor if you decide to enable it on Windows. But this is disabled by default.\n\nRight. Which then means that till this crash is fixed there is no way to test gpu-canvas on Windows.\nEdit: I have disabled gpu-canvas on Windows nightly, so the crash is 'fixed'. Feel free to RESOLVED FIXED etc.", "author": "mayankleoboy1@gmail.com", "count": 7, "age": 165299, "platform": "bmo"}, {"text": "To avoid clutter, I will close this bug as INVALID and remove the regressed by bug. If/when windows support is actually developed, basic testing would catch this bug.", "is_private": false, "time": "2023-12-13T14:18:44Z", "count": 8, "author": "mayankleoboy1@gmail.com", "age": 184723, "platform": "bmo"}, {"count": 9, "author": "mayankleoboy1@gmail.com", "text": "Setting gfx.canvas.remote.worker-threads = 0 prevents the crashes\nBriefly switching to d2d-canvas made me realize just how vastly superior gpu-canvas is. I would much rather prefer to continue to use gpu-canvas.", "time": "2023-12-13T15:55:22Z", "is_private": false, "age": 190521, "platform": "bmo"}, {"author": "mathew.hodson@gmail.com", "count": 10, "text": "\n\n*** This bug has been marked as a duplicate of bug 1869818 ***", "is_private": false, "time": "2023-12-16T16:03:38Z", "age": 450217, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 7, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Erich": {"bmo": {"1822630": {"status": {"id": 1822630, "priority": "P1", "groups": [], "keywords": [], "severity": "S3", "status": "ASSIGNED", "type": "defect", "summary": "Distribute tests for WebGPU CTS better"}, "comments": {"Erich": [{"time": "2023-12-15T21:41:10Z", "text": "Created attachment 9369003\nWIP: Bug 1822630: test(webgpu): switch to single WPT file per CTS `spec.ts` path r=#webgpu-reviewers!\n\n\n\nDepends on D196627", "is_private": false, "author": "egubler@mozilla.com", "count": 11, "age": 384069, "platform": "bmo"}]}}, "1866460": {"status": {"keywords": [], "severity": "S3", "status": "NEW", "type": "defect", "summary": "crash wgpu_core::track::metadata::ResourceMetadata<A,I,T>::tracker_assert_in_bounds", "id": 1866460, "priority": "P3", "groups": []}, "comments": {"Erich": [{"count": 2, "is_private": false, "text": ":nical: Do you know if this also happens on Windows?", "time": "2023-12-11T15:58:58Z", "author": "egubler@mozilla.com", "age": 17937, "platform": "bmo"}, {"text": "I'm pretty sure I've seen it on windows.", "author": "nical.bugzilla@gmail.com", "time": "2023-12-12T08:44:09Z", "is_private": false, "count": 3, "age": 78248, "platform": "bmo"}], "Nical": [{"text": "I'm pretty sure I've seen it on windows.", "author": "nical.bugzilla@gmail.com", "time": "2023-12-12T08:44:09Z", "is_private": false, "count": 3, "age": 78248, "platform": "bmo"}]}}, "1870208": {"status": {"groups": [], "id": 1870208, "priority": "P3", "summary": "WebGPU Fundamentals' triangle examples don't render", "keywords": [], "severity": "S3", "type": "defect", "status": "NEW"}, "comments": {"Erich": [{"count": 2, "time": "2023-12-15T17:24:39Z", "is_private": false, "author": "egubler@mozilla.com", "text": "Workaround: In each of the offending examples I've noticed, there's a bit of shader code that looks like this:\n\n```wgsl\n  let pos = array(\n    vec2f( 0.0,  0.5),  // top center\n    vec2f(-0.5, -0.5),  // bottom left\n    vec2f( 0.5, -0.5)   // bottom right\n  );\n```\nIf you change `let` to `var`:\n\n```diff\n-let pos = array(\n+var pos = array(\n```\n\n\u2026then the shader compiles, and the remainder of the WebGPU code seems to Just Work\u2122.", "age": 368678, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 3, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Nical": {"bmo": {"1866460": {"status": {"keywords": [], "severity": "S3", "status": "NEW", "type": "defect", "summary": "crash wgpu_core::track::metadata::ResourceMetadata<A,I,T>::tracker_assert_in_bounds", "id": 1866460, "priority": "P3", "groups": []}, "comments": {"Erich": [{"count": 2, "is_private": false, "text": ":nical: Do you know if this also happens on Windows?", "time": "2023-12-11T15:58:58Z", "author": "egubler@mozilla.com", "age": 17937, "platform": "bmo"}, {"text": "I'm pretty sure I've seen it on windows.", "author": "nical.bugzilla@gmail.com", "time": "2023-12-12T08:44:09Z", "is_private": false, "count": 3, "age": 78248, "platform": "bmo"}], "Nical": [{"text": "I'm pretty sure I've seen it on windows.", "author": "nical.bugzilla@gmail.com", "time": "2023-12-12T08:44:09Z", "is_private": false, "count": 3, "age": 78248, "platform": "bmo"}]}}, "1869481": {"status": {"summary": "Adjust webgpu test expectations (Dec 12th)", "groups": [], "keywords": [], "id": 1869481, "type": "task", "status": "RESOLVED", "priority": "P3", "severity": "N/A"}, "comments": {"Nical": [{"is_private": false, "author": "nical.bugzilla@gmail.com", "time": "2023-12-12T08:28:52Z", "text": "Created attachment 9368106\nBug 1869481 - Update WebGPU CTS test expectations. r=#webgpu-reviewers", "count": 1, "age": 77331, "platform": "bmo"}, {"author": "pulsebot@bmo.tld", "time": "2023-12-13T13:12:39Z", "text": "Pushed by nsilva@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/26b2162d6f08\nUpdate WebGPU CTS test expectations. r=webgpu-reviewers,ErichDonGubler", "is_private": false, "count": 2, "age": 180758, "platform": "bmo"}, {"count": 3, "author": "abutkovits@mozilla.com", "time": "2023-12-13T21:47:39Z", "text": "https://hg.mozilla.org/mozilla-central/rev/26b2162d6f08", "is_private": false, "age": 211658, "platform": "bmo"}]}}, "1867071": {"status": {"status": "NEW", "type": "defect", "severity": "S3", "keywords": ["perf-alert", "regression"], "summary": "0.16% installer size (OSX) regression on Mon November 20 2023", "priority": "--", "id": 1867071, "groups": []}, "comments": {"Nical": [{"time": "2023-12-13T14:54:53Z", "count": 7, "text": "Sorry I should have reported back. There wasn't a localized regression in the code size, the extra bloat is smeared all over wgpu due to a large refactoring so we couldn't find low hanging fruits to pick and will have to live with the regression for now.", "author": "nical.bugzilla@gmail.com", "is_private": false, "age": 186892, "platform": "bmo"}]}}}, "github": [{"repo": "gfx-rs/wgpu", "issues": {"issue:4862": {"status": {"type": "issue", "id": 4862, "summary": "Ensure that DeviceLostCallbackC is always called exactly once", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/4862"}, "comments": {"Nical": [{"text": "Sorry my explanation was a bit confusing. I meant that wgpu is responsible for calling the callback explicitly for example in device drop, and make certain that it does so when no internal lock is held.\r\n\r\nSo `DeviceLostClosure::drop` would panic if the closure has not been fired (to help catch our mistakes), and other key places like `device_drop` or `device_maintain` would invoke the callback wherever it makes sense as long as no internal wgpu lock is being held.\r\n\r\n>    wgpu may never call the callback\r\n\r\nNo I think that requiring wgpu to call the callback is the right thing to do, we should just ensure that it doesn't do it while holding a lock, because the callback might cause us to call into wgpu and deadlock if some lock was already held.", "time": "2023-12-15T14:53:50Z", "age": 334429, "count": 2, "author": "nical", "url": "https://github.com/gfx-rs/wgpu/pull/4862#issuecomment-1857431624", "platform": "gfx-rs/wgpu"}]}}, "issue:4787": {"status": {"type": "issue", "id": 4787, "summary": "Dependencies between resources prevent destroy from doing its job", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4787"}, "comments": {"Nical": [{"text": "# TODO\r\n\r\n - [x] Introduce the device-global snatch guards (#4867)\r\n - [x] Make buffers use snatch guards (#4867)\r\n - [ ] Make textures use snatch guards\r\n   - [ ] make `surface_present` and `surface_texture_discard` not [mutate a texture's raw handle](https://github.com/gfx-rs/wgpu/blame/6dc9ccab8592645fda3204be1cfb5929fd7f924d/wgpu-core/src/present.rs#L343).\r\n - [ ] accessing bind groups should happen with the snatch lock taken. \r\n - [ ] snatch buffers in `buffer.destroy()`\r\n - [ ] snatch textures in `texture.destroy()`", "time": "2023-12-15T01:54:37Z", "age": 287676, "count": 1, "author": "nical", "url": "https://github.com/gfx-rs/wgpu/issues/4787#issuecomment-1851987901", "platform": "gfx-rs/wgpu"}]}}}, "prs": {}}], "counts": {"bmo": {"total": 3, "secure": 0, "confidential": 0}, "github": {"issues": 2, "prs": 0}}}, "Teo": {"bmo": {"1869520": {"status": {"summary": "wgpu update 2023-12-12", "groups": [], "priority": "P3", "status": "RESOLVED", "type": "task", "severity": "N/A", "keywords": [], "id": 1869520}, "comments": {"Teo": [{"text": "Created attachment 9368157\nBug 1869520 - Update `wgpu` to revision 6dc9ccab8592645fda3204be1cfb5929fd7f924d. r=#webgpu-reviewers", "author": "ttanasoaia@mozilla.com", "is_private": false, "time": "2023-12-12T13:25:07Z", "count": 1, "age": 95106, "platform": "bmo"}, {"is_private": false, "time": "2023-12-13T09:57:52Z", "count": 2, "text": "Pushed by ttanasoaia@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/e995cf788f10\nUpdate `wgpu` to revision 6dc9ccab8592645fda3204be1cfb5929fd7f924d. r=webgpu-reviewers,supply-chain-reviewers,nical", "author": "pulsebot@bmo.tld", "age": 169071, "platform": "bmo"}, {"count": 3, "is_private": false, "time": "2023-12-13T21:47:46Z", "author": "abutkovits@mozilla.com", "text": "https://hg.mozilla.org/mozilla-central/rev/e995cf788f10", "age": 211665, "platform": "bmo"}]}}}, "github": [{"repo": "gfx-rs/wgpu", "issues": {"issue:4827": {"status": {"type": "issue", "id": 4827, "summary": "[naga] Calling a function accepting a ptr from within another function", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4827"}, "comments": {"Teo": [{"text": "> It compiles/validate fine on my side too, but once used inside a compute pipeline it actually fails to be used\r\n\r\nIn what way does it fail to be used?\r\n\r\nThe original error you were getting was \"Function [44] 'my_function_name' is invalid\" which is a naga validation error; I'm confused \ud83d\ude05.", "time": "2023-12-15T23:36:39Z", "age": 365798, "count": 4, "author": "teoxoy", "url": "https://github.com/gfx-rs/wgpu/issues/4827#issuecomment-1858158953", "platform": "gfx-rs/wgpu"}, {"text": "I'm usually validating my shaders at compile time with:\r\n<img width=\"597\" alt=\"image\" src=\"https://github.com/gfx-rs/wgpu/assets/62186646/43ff5ed0-df0b-44bd-8d51-dcc03ea42ab3\">\r\nAnd it's successefully validated.\r\nBut at runtime - when calling the device.create_compute_pipeline() - it fails with that error :(", "time": "2023-12-15T23:54:56Z", "age": 366895, "count": 5, "author": "gents83", "url": "https://github.com/gfx-rs/wgpu/issues/4827#issuecomment-1858182285", "platform": "gfx-rs/wgpu"}, {"text": "This is an example that validate correctly but than fails at runtime:\r\n\r\nstruct InnerContainer {\r\n    inner_id: u32,\r\n}\r\nstruct Container {\r\n    id: u32,\r\n    inner: InnerContainer,\r\n};\r\n\r\n\r\nfn id(c: ptr<function, Container>) -> u32 {\r\n    return (*c).id;\r\n}\r\nfn inner_id(c: ptr<function, InnerContainer>) -> u32 {\r\n    return (*c).inner_id;\r\n}\r\nfn first(c: ptr<function, Container>) -> u32 {\r\n    return id(c);\r\n}\r\nfn second(c: ptr<function, Container>) -> u32 {\r\n    return inner_id(&(*c).inner);\r\n}\r\n\r\n@compute\r\n@workgroup_size(16, 16, 1)\r\nfn main() {\r\n    var global_var = Container(1u, InnerContainer(2u));\r\n    let u = first(&global_var);\r\n    let v = second(&global_var);\r\n}\r\n\r\nBut this time the error is:\r\n_internal error: entered unreachable code: Expression [2] is not cached!_", "time": "2023-12-16T17:49:46Z", "age": 431385, "count": 6, "author": "gents83", "url": "https://github.com/gfx-rs/wgpu/issues/4827#issuecomment-1858787933", "platform": "gfx-rs/wgpu"}]}}, "issue:4817": {"status": {"type": "issue", "id": 4817, "summary": "Shader translation error for stage ShaderStages(VERTEX | FRAGMENT): new_render_pipeline_state: \"Compiler encountered an internal error\" ", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4817"}, "comments": {"Teo": [{"text": "The defaults of the logging plugin exclude wgpu and naga's logs for severities lower than error/warn.\r\n\r\nhttps://github.com/bevyengine/bevy/blob/12a11e2fd0f7f6c1b907daa2782898c6f3097d1e/crates/bevy_log/src/lib.rs#L105\r\n\r\nYou should disable it or change the defaults.", "time": "2023-12-14T01:03:16Z", "age": 198195, "count": 2, "author": "teoxoy", "url": "https://github.com/gfx-rs/wgpu/issues/4817#issuecomment-1854463048", "platform": "gfx-rs/wgpu"}]}}, "issue:4738": {"status": {"type": "issue", "id": 4738, "summary": "The bind group in `set_bind_group` should be optional", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4738"}, "comments": {"Teo": [{"text": "Relevant spec PR: https://github.com/gpuweb/gpuweb/pull/3938", "time": "2023-12-15T22:20:36Z", "age": 361235, "count": 2, "author": "teoxoy", "url": "https://github.com/gfx-rs/wgpu/issues/4738#issuecomment-1858049035", "platform": "gfx-rs/wgpu"}]}}, "issue:4298": {"status": {"type": "issue", "id": 4298, "summary": "Downlevel `max_inter_stage_shader_components` not consistent", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4298"}, "comments": {"Teo": [{"text": "Looking some more into this, I think we should revert the change to `max_inter_stage_shader_components`.\r\nOpenGL 3.1 doesn't require limits to have a minimum as far as I can tell, minimum limit requirements have been introduced in OpenGL 3.2. If people want to investigate and list the limits of OpenGL 3.1, those should go in a new `downlevel_gl31_defaults`.\r\n\r\nA PR would be welcome.\r\n\r\ncc @Zoxc @cwfitzgerald ", "time": "2023-12-12T18:05:32Z", "age": 86731, "count": 2, "author": "teoxoy", "url": "https://github.com/gfx-rs/wgpu/issues/4298#issuecomment-1851820615", "platform": "gfx-rs/wgpu"}]}}, "issue:4293": {"status": {"type": "issue", "id": 4293, "summary": "Occasional errors when sharing and dropping `Instance` across threads.", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4293"}, "comments": {"Teo": [{"text": "I don't know what `khronos_egl` can do in this case though. It sounds like this is an issue in the EGL implementation itself.", "time": "2023-12-11T18:07:48Z", "age": 467, "count": 2, "author": "teoxoy", "url": "https://github.com/gfx-rs/wgpu/issues/4293#issuecomment-1849850412", "platform": "gfx-rs/wgpu"}]}}}, "prs": {}}], "counts": {"bmo": {"total": 1, "secure": 0, "confidential": 0}, "github": {"issues": 5, "prs": 0}}}, "Ashley": {"bmo": {"1869672": {"status": {"status": "NEW", "summary": "WR SVG filters: Calculate proper get_rect/get_coverage and RenderTask target_size for filters", "id": 1869672, "keywords": [], "type": "task", "groups": [], "priority": "--", "severity": "--"}, "comments": {"Ashley": [{"text": "PictureCompositeMode::get_rect and get_coverage need to take into account the filter region provided by Gecko so that filters larger than the source primitive are not clipped to the source primitive rect, and filters smaller than the source primitive don't render the full rect where it is unnecessary.\n\nHow to do this properly has proven quite difficult to work out, studying Gecko FilterInstance code and take_context / wrap_prim_with_filters in WR hasn't led to a clear answer how to calculate this properly in my experiments, so in the interest of accelerating WR SVG filters we are using the original source primitive rect for now, but that means we currently can't accelerate some filter graphs because they produce a larger rect than the source primitives - fixing this would be a very good thing but not critical.", "count": 0, "author": "ahale@mozilla.com", "is_private": false, "time": "2023-12-13T00:24:13Z", "age": 134652, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 1, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Glenn": {"bmo": {"1869715": {"status": {"id": 1869715, "summary": "Remove display item dependency from ClipManager::DefineScrollLayers", "status": "ASSIGNED", "severity": "--", "priority": "--", "type": "task", "groups": [], "keywords": []}, "comments": {"Glenn": [{"count": 1, "text": "Created attachment 9368347\nBug 1869715 - Remove display item dependency from ClipManager::DefineScrollLayers\n\nThis simplifies some upcoming patches to move the scroll spatial\nnode creation to the frame tree.", "is_private": false, "author": "gwatson@mozilla.com", "time": "2023-12-13T04:56:23Z", "age": 150982, "platform": "bmo"}]}}, "1869994": {"status": {"priority": "--", "severity": "--", "type": "defect", "keywords": ["nightly-community", "regression"], "groups": [], "id": 1869994, "summary": "video with border-radius over a video loses rounding", "status": "RESOLVED"}, "comments": {"Glenn": [{"time": "2023-12-14T23:19:46Z", "author": "gwatson@mozilla.com", "text": "Created attachment 9368778\nBug 1869994 - Fix overlapping underlay compositor surfaces with masks", "is_private": false, "count": 6, "age": 303585, "platform": "bmo"}, {"is_private": false, "text": "Pushed by gwatson@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/e96bd5ec21a2\nFix overlapping underlay compositor surfaces with masks r=gfx-reviewers,lsalzman", "time": "2023-12-17T19:57:45Z", "author": "pulsebot@bmo.tld", "count": 7, "age": 550664, "platform": "bmo"}, {"time": "2023-12-18T12:14:40Z", "author": "chorotan@mozilla.com", "text": "https://hg.mozilla.org/mozilla-central/rev/e96bd5ec21a2", "is_private": false, "count": 8, "age": 609279, "platform": "bmo"}, {"count": 9, "author": "robertgc@gmail.com", "time": "2023-12-18T13:40:43Z", "text": "Works, perfect in Nightly. Thanks", "is_private": false, "age": 614442, "platform": "bmo"}]}}, "1709600": {"status": {"groups": [], "type": "defect", "keywords": [], "severity": "S3", "priority": "--", "status": "NEW", "id": 1709600, "summary": "Timeouts in mozilla::layers::LockD3DTexture<T>"}, "comments": {"Lee": [{"text": "Seems like the vast majority of these crashes happen on Windows 11. Over past 6 months, 80.78% of these crashes occur on Windows 11. I wonder if the trend line follows the creeping up in our Windows 11 user-base, though it's hard to see from the existing gfx telemetry we have. As Timothy points out, could be related to an increase users of newer hardware or drivers that might track with that stat as well, so could be red herring.", "author": "lsalzman@mozilla.com", "time": "2023-12-16T06:49:55Z", "is_private": false, "count": 26, "age": 416994, "platform": "bmo"}, {"time": "2023-12-17T19:51:07Z", "is_private": false, "count": 27, "text": "I'm not sure what could be causing these, what Lee has mentioned sounds like a plausible explanation though. Perhaps a deeper dive in to the telemetry might provide some correlations with hardware / driver version?", "author": "gwatson@mozilla.com", "age": 550266, "platform": "bmo"}, {"is_private": false, "time": "2023-12-18T04:38:42Z", "count": 28, "text": "(In reply to Lee Salzman [:lsalzman] from comment #26)\n> Seems like the vast majority of these crashes happen on Windows 11.\n\nI'm guessing that's mostly a result of this primarily occurring on the last few generations of Intel integrated graphics, rather than being caused by the OS version.  (I say this as someone who experiences it on Windows 10.)", "author": "1justinpeter@gmail.com", "age": 581921, "platform": "bmo"}], "Glenn": [{"time": "2023-12-17T19:51:07Z", "is_private": false, "count": 27, "text": "I'm not sure what could be causing these, what Lee has mentioned sounds like a plausible explanation though. Perhaps a deeper dive in to the telemetry might provide some correlations with hardware / driver version?", "author": "gwatson@mozilla.com", "age": 550266, "platform": "bmo"}, {"is_private": false, "time": "2023-12-18T04:38:42Z", "count": 28, "text": "(In reply to Lee Salzman [:lsalzman] from comment #26)\n> Seems like the vast majority of these crashes happen on Windows 11.\n\nI'm guessing that's mostly a result of this primarily occurring on the last few generations of Intel integrated graphics, rather than being caused by the OS version.  (I say this as someone who experiences it on Windows 10.)", "author": "1justinpeter@gmail.com", "age": 581921, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 3, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Tim": {"bmo": {"1864374": {"status": {"keywords": ["regressionwindow-wanted"], "groups": [], "type": "defect", "priority": "--", "severity": "S2", "status": "REOPENED", "id": 1864374, "summary": "Opening an SVG with certain large numbers in attributes crashes/freezes the entire PC"}, "comments": {"Tim": [{"time": "2023-12-18T10:26:49Z", "is_private": false, "author": "tnikkel@gmail.com", "text": "After the patch that landed here, is the remaining badness here still S2 level?", "count": 28, "age": 602808, "platform": "bmo"}, {"text": "(In reply to Marcelo Otowicz from comment #27)\n> It must be something in my Windows. I'll update it too and check the settings. Anyway, Firefox itself has crashed on every PC I've tested this on.\n\nIf you haven't already, would you mind testing [Firefox Nightly](https://www.mozilla.org/en-US/firefox/channel/desktop/#nightly) to confirm that the issue is fixed there?\n\n(In reply to Timothy Nikkel (:tnikkel) from comment #28)\n> After the patch that landed here, is the remaining badness here still S2 level?\n\nProbably not, if it mitigates the crash as far as we know.  Though really, maybe we should just close this as an S2, and spin off a followup lower-severity bug to track the remaining work that we'd like to do.  It's always a bit messy tracking-wise to have multiple behavior-impacting patches land on a single bug across multiple months/releases; hard to figure out which release is affected and to what extent.", "count": 29, "author": "dholbert@mozilla.com", "is_private": false, "time": "2023-12-18T15:51:46Z", "age": 622305, "platform": "bmo"}]}}, "1869444": {"status": {"groups": [], "type": "task", "severity": "--", "id": 1869444, "keywords": ["meta"], "summary": "[meta] animated image reset issues", "priority": "--", "status": "NEW"}, "comments": {"Tim": [{"time": "2023-12-11T23:54:58Z", "count": 0, "text": "", "author": "tnikkel@gmail.com", "is_private": false, "age": 46497, "platform": "bmo"}]}}, "1865449": {"status": {"groups": [], "type": "defect", "severity": "S3", "status": "NEW", "priority": "--", "summary": "AVIFs with \"msf1\" major brand are not animated", "id": 1865449, "keywords": ["parity-chrome"]}, "comments": {"Tim": [{"count": 5, "author": "tnikkel@gmail.com", "time": "2023-12-13T00:40:47Z", "text": "S3 seems more appropriate. Correct me if I'm wrong, but I think there aren't very many files that exist like this on the web at this point.", "is_private": false, "age": 135646, "platform": "bmo"}]}}, "1868248": {"status": {"status": "NEW", "id": 1868248, "keywords": [], "priority": "--", "summary": "Animated loading-GIF at OKCupid unexpectedly flickers and resets mid-animation", "type": "defect", "groups": [], "severity": "S3"}, "comments": {"Tim": [{"count": 7, "author": "tnikkel@gmail.com", "time": "2023-12-11T23:56:19Z", "text": "I filed a meta -> bug 1869444.", "is_private": false, "age": 46578, "platform": "bmo"}]}}, "1869938": {"status": {"groups": ["gfx-core-security"], "type": "defect", "severity": "S3", "status": "ASSIGNED", "id": 1869938, "keywords": ["assertion", "pernosco"], "priority": "--", "summary": "Assertion failure: NS_UsePrivateBrowsing(newChannel) == mRespectPrivacy, at /builds/worker/checkouts/gecko/image/imgLoader.cpp:2446"}, "comments": {"Tim": [{"count": 17, "text": "I think this is an S3 because I believe the channels where we can fail to set the private browsing bit are limited to URIs that are either javascript, blob, or data, for which I don't think private browsing will make much of a difference (correct me if any of this is wrong).", "author": "tnikkel@gmail.com", "time": "2023-12-18T12:10:32Z", "is_private": false, "age": 609031, "platform": "bmo"}]}}, "1660039": {"status": {"groups": [], "type": "defect", "summary": "Hit MOZ_CRASH(Item found was in the wrong list! type 587 (outer type was 0 at depth 0, now is 2)) at src/layout/painting/nsDisplayList.h:2364", "id": 1660039, "status": "RESOLVED", "severity": "S3", "keywords": ["assertion", "crash", "testcase"], "priority": "P3"}, "comments": {"Tim": [{"count": 12, "author": "tnikkel@gmail.com", "time": "2023-12-16T03:54:22Z", "text": "Thanks for filing those.\n\nSince these testcases no longer reproduce let's close this.", "is_private": false, "age": 406461, "platform": "bmo"}]}}, "1870415": {"status": {"status": "NEW", "severity": "S3", "keywords": ["assertion", "bugmon", "pernosco", "regression", "testcase"], "priority": "--", "type": "defect", "groups": [], "summary": "Hit MOZ_CRASH(Item found was in the wrong list! type 281 (outer type was 263 at depth 2, now is 3)) at /builds/worker/checkouts/gecko/layout/painting/nsDisplayList.h:2210", "id": 1870415}, "comments": {"Tim": [{"author": "tnikkel@gmail.com", "text": "The the content visibility pref forced on I get this regression range\n\nhttps://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=b2d97b936206d8168d56322cc387fbbc7ad9c515&tochange=aad1e7be018256fa3210f82a5807a5bd5d6fece1\n\nI ran the regression twice and got this both times.", "count": 8, "is_private": false, "time": "2023-12-16T15:50:01Z", "age": 449400, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 7, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "Kelsey": {"bmo": {"1760842": {"status": {"groups": [], "type": "defect", "keywords": [], "severity": "S2", "priority": "--", "status": "RESOLVED", "summary": "https://glitch.com/edit/#!/swift-rift-rain fails to create WebGL context", "id": 1760842}, "comments": {"Kelsey": [{"author": "jgilbert@mozilla.com", "text": "Oh, I missed comment 3!", "count": 5, "is_private": false, "time": "2023-12-12T17:22:08Z", "age": 109327, "platform": "bmo"}]}}}, "github": [], "counts": {"bmo": {"total": 1, "secure": 0, "confidential": 0}, "github": {"issues": 0, "prs": 0}}}, "JimB": {"bmo": {}, "github": [{"repo": "gfx-rs/wgpu", "issues": {"issue:4871": {"status": {"type": "issue", "id": 4871, "summary": "Speed up Naga's `cargo xtask validate wgsl` from 12s to 0.8s", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/pull/4871"}, "comments": {"JimB": [{"text": "I have the feeling this code isn't the greatest. I wanted to get it out there and then just do whatever people tell me to do.", "time": "2023-12-13T07:06:23Z", "age": 133582, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/pull/4871#issuecomment-1853056015", "platform": "gfx-rs/wgpu"}]}}, "issue:4738": {"status": {"type": "issue", "id": 4738, "summary": "The bind group in `set_bind_group` should be optional", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4738"}, "comments": {"JimB": [{"text": "It's unclear what the underlying platform APIs' expectations are around removing bindgroups, so we're going to need to investigate this a bit before we can tell how much work it will be.", "time": "2023-12-15T22:18:13Z", "age": 361092, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4738#issuecomment-1858045785", "platform": "gfx-rs/wgpu"}, {"text": "Relevant spec PR: https://github.com/gpuweb/gpuweb/pull/3938", "time": "2023-12-15T22:20:36Z", "age": 361235, "count": 2, "author": "teoxoy", "url": "https://github.com/gfx-rs/wgpu/issues/4738#issuecomment-1858049035", "platform": "gfx-rs/wgpu"}]}}, "issue:4564": {"status": {"type": "issue", "id": 4564, "summary": "[hlsl-out] `instance_index` workaround doesn't always get applied", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4564"}, "comments": {"JimB": [{"text": "It seems like it would be a lot simpler to just apply the fix when we initialize the struct at the top of the entry point. Then references to the struct member wouldn't need any special treatment.", "time": "2023-12-15T01:18:48Z", "age": 285527, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4564#issuecomment-1856359385", "platform": "gfx-rs/wgpu"}, {"text": "HLSL now has keywords for this, but they require shadermodel 6.8 and a relatively new version of DXC.\r\n\r\nhttps://github.com/microsoft/DirectXShaderCompiler/pull/5770", "time": "2023-12-16T04:38:25Z", "age": 383904, "count": 2, "author": "Elabajaba", "url": "https://github.com/gfx-rs/wgpu/issues/4564#issuecomment-1858519375", "platform": "gfx-rs/wgpu"}]}}, "issue:4436": {"status": {"type": "issue", "id": 4436, "summary": "\"Unable to unroll loop\" error compiling generated HLSL code that writes to a matrix row in a loop", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4436"}, "comments": {"JimB": [{"text": "See also #4337", "time": "2023-12-15T00:43:43Z", "age": 283422, "count": 2, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4436#issuecomment-1856311528", "platform": "gfx-rs/wgpu"}]}}, "issue:4473": {"status": {"type": "issue", "id": 4473, "summary": "Type parameters to vec/mat type constructors can't be aliases", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4473"}, "comments": {"JimB": [{"text": "Confirmed still broken on trunk.", "time": "2023-12-13T22:18:01Z", "age": 188280, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4473#issuecomment-1854120541", "platform": "gfx-rs/wgpu"}]}}, "issue:4540": {"status": {"type": "issue", "id": 4540, "summary": "Reference to a field causes panic", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4540"}, "comments": {"JimB": [{"text": "I took the time to reread the spec here, and wanted to write down my understanding:\r\n\r\nA [memory view](https://gpuweb.github.io/gpuweb/wgsl/#memory-views) is what pointer and reference values refer to: a specific set of bytes in some address space.\r\n\r\nA memory view of a variable is different from a memory view of one of its components: a reference to a vector, say, represents a memory view enclosing the entire matrix, whereas a reference to one of its components represents a memory view enclosing only that component.\r\n\r\nSo the restriction that the argument be [the same memory view as its originating variable](https://gpuweb.github.io/gpuweb/wgsl/#language-extensions-sec) means that, without the `unrestricted_pointer_parameters` extension, you may only pass pointers to *entire variables*.\r\n\r\nThis is the restriction that Naga is failing to enforce.", "time": "2023-12-12T23:39:18Z", "age": 106757, "count": 2, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4540#issuecomment-1852405514", "platform": "gfx-rs/wgpu"}]}}, "issue:3160": {"status": {"type": "issue", "id": 3160, "summary": "Early Resource Deletion in Poll Tests", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/3160"}, "comments": {"JimB": [{"text": "It would be nice to see if this still occurs after arcanization.", "time": "2023-12-15T22:43:40Z", "age": 362619, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/3160#issuecomment-1858084309", "platform": "gfx-rs/wgpu"}, {"text": "I tested it and it does. ", "time": "2023-12-16T03:05:04Z", "age": 378303, "count": 2, "author": "cwfitzgerald", "url": "https://github.com/gfx-rs/wgpu/issues/3160#issuecomment-1858426385", "platform": "gfx-rs/wgpu"}]}}, "issue:4519": {"status": {"type": "issue", "id": 4519, "summary": "Change integer texture parameters to unsigned and add some more overloads", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4519"}, "comments": {"JimB": [{"text": "We think the spec has changed here, so we need to actually check again what the requirements are.", "time": "2023-12-14T22:15:43Z", "age": 274542, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4519#issuecomment-1856036637", "platform": "gfx-rs/wgpu"}]}}, "issue:4397": {"status": {"type": "issue", "id": 4397, "summary": "Pointer aliasing with unused parameter", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4397"}, "comments": {"JimB": [{"text": "I believe this code is now forbidden by WGSL, per [the restrictions in the section Aliasing](https://gpuweb.github.io/gpuweb/wgsl/#aliasing), and the bug is that Naga fails to validate it out.", "time": "2023-12-15T00:32:09Z", "age": 282728, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4397#issuecomment-1856277345", "platform": "gfx-rs/wgpu"}]}}, "issue:4396": {"status": {"type": "issue", "id": 4396, "summary": "[hlsl-out] Invalid HLSL for function which accepts a pointer to an array", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4396"}, "comments": {"JimB": [{"text": "See also #4393.\r\n\r\nWe should consider just emitting type aliases for *all* array types, and then just using them for argument and return types.", "time": "2023-12-15T00:24:49Z", "age": 282288, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4396#issuecomment-1856266902", "platform": "gfx-rs/wgpu"}]}}, "issue:4393": {"status": {"type": "issue", "id": 4393, "summary": "[hlsl-out] Invalid HLSL for function which returns an array", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4393"}, "comments": {"JimB": [{"text": "Reproduced on recent trunk.", "time": "2023-12-15T00:18:26Z", "age": 281905, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4393#issuecomment-1856258057", "platform": "gfx-rs/wgpu"}]}}, "issue:4390": {"status": {"type": "issue", "id": 4390, "summary": "Relax vector, matrix and array OOB validation", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4390"}, "comments": {"JimB": [{"text": "Note that this issue only covers the excessive validation. There may be missing bounds checks, and those should be filed as separate issues.", "time": "2023-12-12T22:16:03Z", "age": 101762, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4390#issuecomment-1852239991", "platform": "gfx-rs/wgpu"}]}}, "issue:4385": {"status": {"type": "issue", "id": 4385, "summary": "Implement WGSL division by zero semantics", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4385"}, "comments": {"JimB": [{"text": "WGSL requires that division by zero in a runtime expression returns the left operand (surprising!). Implementing that check should clear this up on FXC, so we're re-purposing this issue to represent that project.", "time": "2023-12-14T22:42:21Z", "age": 276140, "count": 2, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4385#issuecomment-1856083226", "platform": "gfx-rs/wgpu"}]}}, "issue:4460": {"status": {"type": "issue", "id": 4460, "summary": "D3DCompile error with vector indexing", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4460"}, "comments": {"JimB": [{"text": "See also #4337", "time": "2023-12-15T00:49:21Z", "age": 283760, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4460#issuecomment-1856319465", "platform": "gfx-rs/wgpu"}]}}, "issue:4352": {"status": {"type": "issue", "id": 4352, "summary": "[wgsl-in] Deep nesting causes stack-overflow", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4352"}, "comments": {"JimB": [{"text": "I reproduced this on Linux with:\r\n\r\n```\r\nfn f() {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{\r\n```\r\n", "time": "2023-12-13T21:54:57Z", "age": 186896, "count": 2, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4352#issuecomment-1854068112", "platform": "gfx-rs/wgpu"}]}}, "issue:4334": {"status": {"type": "issue", "id": 4334, "summary": "Clamp the FS outputs to 0-1 range for normalized pixel targets", "priority": "---", "severity": "---", "status": "open", "keywords": [], "groups": [], "url": "https://github.com/gfx-rs/wgpu/issues/4334"}, "comments": {"JimB": [{"text": "Which platforms does this affect? It'd be nice to get a VUID for this, if Vulkan mentions it.\r\n\r\nI'm assuming this refers only to color channels.", "time": "2023-12-12T22:08:36Z", "age": 101315, "count": 1, "author": "jimblandy", "url": "https://github.com/gfx-rs/wgpu/issues/4334#issuecomment-1852223132", "platform": "gfx-rs/wgpu"}]}}}, "prs": {}}], "counts": {"bmo": {"total": 0, "secure": 0, "confidential": 0}, "github": {"issues": 16, "prs": 0}}}}, "parameters": {"buildTime": "2023-12-18T11:00:01.504097-07:00", "oldestTime": "2023-12-11T11:00:01.504155"}}